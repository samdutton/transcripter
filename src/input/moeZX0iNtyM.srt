WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.353
[MUSIC PLAYING]

00:00:04.480 --> 00:00:06.230
HOUSSEIN DJIRDEH: Hi,
I'm Houssein Djirdeh

00:00:06.230 --> 00:00:07.860
for the "Developer Show."

00:00:07.860 --> 00:00:10.610
Chrome Dev Summit is back
again for another year

00:00:10.610 --> 00:00:13.130
in San Francisco, and
there are a bunch of things

00:00:13.130 --> 00:00:15.260
we're excited to talk about.

00:00:15.260 --> 00:00:18.770
Here are the top five
juiciest stories.

00:00:18.770 --> 00:00:21.950
To cover number one, the first
edition of the Web Almanac

00:00:21.950 --> 00:00:23.540
has just launched.

00:00:23.540 --> 00:00:26.810
The Almanac combines
extensive HTTP archived data

00:00:26.810 --> 00:00:29.600
for millions of URLs
with the expertise

00:00:29.600 --> 00:00:33.230
of many top contributors
in the web ecosystem.

00:00:33.230 --> 00:00:37.160
It's an annual state-of-the-red
report containing 20 chapters

00:00:37.160 --> 00:00:39.720
that covers every major
aspect of the web,

00:00:39.720 --> 00:00:42.320
including page content,
user experience,

00:00:42.320 --> 00:00:44.080
and content distribution.

00:00:44.080 --> 00:00:45.980
For number two,
the Search Console

00:00:45.980 --> 00:00:48.080
now includes a brand
new Speed Report,

00:00:48.080 --> 00:00:50.030
which provides
information on how

00:00:50.030 --> 00:00:54.200
groups of pages on your site are
performing against key metrics.

00:00:54.200 --> 00:00:57.380
All of this information comes
from real user measurements

00:00:57.380 --> 00:01:00.260
thanks to the Chrome
User Experience Report.

00:01:00.260 --> 00:01:02.630
Currently, developers
use a whole suite

00:01:02.630 --> 00:01:05.480
of different performance
metrics to assess how well

00:01:05.480 --> 00:01:07.050
their site is performing.

00:01:07.050 --> 00:01:11.030
Two brand new metrics make
up number three in this list.

00:01:11.030 --> 00:01:13.130
When we talk about
time to first paint,

00:01:13.130 --> 00:01:14.630
we don't really
have a very good way

00:01:14.630 --> 00:01:18.590
to measure how quickly users can
see the most important content

00:01:18.590 --> 00:01:20.090
on the page.

00:01:20.090 --> 00:01:23.510
Well, now, that's changed with
the Largest Contentful Paint

00:01:23.510 --> 00:01:24.860
metric.

00:01:24.860 --> 00:01:28.190
This new metric can be used
to measure how fast users

00:01:28.190 --> 00:01:31.310
see the largest, and usually
the most significant, content

00:01:31.310 --> 00:01:32.780
on the page.

00:01:32.780 --> 00:01:35.870
It is now available
in Chrome 77.

00:01:35.870 --> 00:01:37.520
Have you ever opened
a web page and are

00:01:37.520 --> 00:01:40.700
about to click a link or button,
but more content shows up

00:01:40.700 --> 00:01:42.920
that actually changes
the layout of the page,

00:01:42.920 --> 00:01:44.960
shifting the link or
button away from where

00:01:44.960 --> 00:01:46.760
you intended to click?

00:01:46.760 --> 00:01:47.300
Yep.

00:01:47.300 --> 00:01:51.050
It's happened to me, too, and
it can be quite frustrating.

00:01:51.050 --> 00:01:53.360
Cumulative Layout
Shift is a new metric

00:01:53.360 --> 00:01:55.160
that you can use
to derive a score

00:01:55.160 --> 00:01:58.430
on how much unexpectedly
layout shifting is happening

00:01:58.430 --> 00:01:59.900
on a page.

00:01:59.900 --> 00:02:02.450
Number four goes to a
number of new updates

00:02:02.450 --> 00:02:03.830
to developer tooling.

00:02:03.830 --> 00:02:06.830
Stack Packs, a feature that
extends Lighthouse to include

00:02:06.830 --> 00:02:09.289
additional, actionable
advice, depending

00:02:09.289 --> 00:02:11.640
on what tools are
detected on a page,

00:02:11.640 --> 00:02:15.050
now supports more
than just WordPress.

00:02:15.050 --> 00:02:17.720
If you run Lighthouse
or Page Speed Insights

00:02:17.720 --> 00:02:21.890
on any site that uses either
WordPress, Magento, Amp,

00:02:21.890 --> 00:02:25.800
Angular, or React, you will see
additional performance audit

00:02:25.800 --> 00:02:29.720
suggestions that are relevant
for the detected stack.

00:02:29.720 --> 00:02:32.510
Lightouse Bot was a
previously released library

00:02:32.510 --> 00:02:34.610
that allowed developers
to run Lighthouse

00:02:34.610 --> 00:02:36.890
in continuous
integration, essentially

00:02:36.890 --> 00:02:40.970
being able to fail a build if a
specified score was not passed.

00:02:40.970 --> 00:02:44.690
The MVP for Lighthouse CI,
an entirely new library

00:02:44.690 --> 00:02:48.140
has just launched, which takes
this concept a step further.

00:02:48.140 --> 00:02:51.710
With a collection of commands
to assert, save, and visualize

00:02:51.710 --> 00:02:54.620
Lighthouse reports over time.

00:02:54.620 --> 00:02:56.840
A number of framework
and ecosystem efforts

00:02:56.840 --> 00:02:59.930
make up number
five on this list.

00:02:59.930 --> 00:03:02.780
In terms of performance,
many frameworks and tools

00:03:02.780 --> 00:03:04.730
have added a number
of optimizations

00:03:04.730 --> 00:03:08.240
to make the process of
building faster sites easier

00:03:08.240 --> 00:03:10.070
for many developers.

00:03:10.070 --> 00:03:13.010
We've also been working
closely with the Next.js team,

00:03:13.010 --> 00:03:16.020
improving the framework in
a number of different ways.

00:03:16.020 --> 00:03:18.680
This includes a better web
patch [? trunking ?] strategy,

00:03:18.680 --> 00:03:21.050
differential loading
with module or no module,

00:03:21.050 --> 00:03:23.900
and a number of
JavaScript optimization.

00:03:23.900 --> 00:03:26.630
A few major sites
already using Next.js

00:03:26.630 --> 00:03:28.850
have begun to take advantage
of these new features

00:03:28.850 --> 00:03:32.120
to reduce their amount
of JavaScript footprint.

00:03:32.120 --> 00:03:34.460
We announced a framework
fund last year,

00:03:34.460 --> 00:03:36.680
and we're excited to see
that many tools that we've

00:03:36.680 --> 00:03:40.590
been supporting have taken steps
to improve their performance.

00:03:40.590 --> 00:03:44.060
This includes libraries like
bundlephobia and bundlesize,

00:03:44.060 --> 00:03:47.720
as well as fully fledged
frameworks like Nuxt.js.

00:03:47.720 --> 00:03:49.410
For all announcements
and updates,

00:03:49.410 --> 00:03:52.320
check out the links in
the description below.

00:03:52.320 --> 00:03:55.175
Please remember to like,
subscribe, and share.

00:03:55.175 --> 00:03:57.380
I'm Houssein Djirdeh for
the "Developer Show."

00:03:57.380 --> 00:03:58.340
Thanks for watching.

00:03:58.340 --> 00:04:01.690
[MUSIC PLAYING]


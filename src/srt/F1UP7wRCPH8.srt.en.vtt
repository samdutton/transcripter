WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.290
[MUSIC PLAYING]

00:00:07.060 --> 00:00:10.157
ANIL SABHARWAL:
The year was 1993.

00:00:10.157 --> 00:00:11.740
Now I realize that
some of you may not

00:00:11.740 --> 00:00:13.430
have even been born yet.

00:00:13.430 --> 00:00:18.130
But for me, it was the year that
my parents first brought home

00:00:18.130 --> 00:00:24.480
our internet-capable computer,
the Commodore Amiga 4000.

00:00:24.480 --> 00:00:27.340
Frogger never looked so good.

00:00:27.340 --> 00:00:28.990
Yeah, sure,
WordPerfect was still

00:00:28.990 --> 00:00:32.170
on 19 3 and 1/2
inch floppy disks.

00:00:32.170 --> 00:00:36.490
But I had a 9,600 baud
modem for the first time.

00:00:36.490 --> 00:00:39.880
The possibilities
were limitless.

00:00:39.880 --> 00:00:41.360
Now, I grew up in Canada.

00:00:41.360 --> 00:00:43.600
So like any
self-respecting Canadian,

00:00:43.600 --> 00:00:45.670
I have a healthy
obsession for hockey.

00:00:45.670 --> 00:00:47.890
And my team is the
Edmonton Oilers.

00:00:47.890 --> 00:00:50.680
And if I'm honest with
myself, my love for computers

00:00:50.680 --> 00:00:53.890
started because of
hockey bulletin boards.

00:00:53.890 --> 00:00:55.930
Weeks after I got
my first computer,

00:00:55.930 --> 00:00:58.040
I had a friend of
mine who said to me,

00:00:58.040 --> 00:01:00.790
I have to download this
so-called browser, called

00:01:00.790 --> 00:01:04.730
Mosaic, and visit this
thing called a URL.

00:01:04.730 --> 00:01:11.770
Well, 22 seconds and 37
beautiful modem beeps later,

00:01:11.770 --> 00:01:14.840
it was everything I
hoped it would be.

00:01:14.840 --> 00:01:18.430
I was on the web.

00:01:18.430 --> 00:01:19.490
I was hooked.

00:01:19.490 --> 00:01:22.242
I checked this website every
single day before class.

00:01:22.242 --> 00:01:23.950
That's a big deal for
me, because I'm not

00:01:23.950 --> 00:01:24.800
a morning person.

00:01:24.800 --> 00:01:26.592
But every morning, I
would wake up and have

00:01:26.592 --> 00:01:28.180
a look at this website.

00:01:28.180 --> 00:01:29.830
And my friends and
I, we would actually

00:01:29.830 --> 00:01:32.950
start exchanging notes in
class with URLs on them

00:01:32.950 --> 00:01:34.640
that we had found
the day before.

00:01:34.640 --> 00:01:36.970
Which was a big deal,
because this is 1993,

00:01:36.970 --> 00:01:38.710
so there are no search engines.

00:01:38.710 --> 00:01:40.900
So finding a URL
that actually worked

00:01:40.900 --> 00:01:44.260
and had interesting content
was a pretty big deal.

00:01:44.260 --> 00:01:45.940
Now, about a month
of this went on.

00:01:45.940 --> 00:01:49.510
And I thought to myself, I want
to create my own site, too.

00:01:49.510 --> 00:01:52.960
So I started researching
stuff, like FTP servers,

00:01:52.960 --> 00:01:56.560
and domain registrars, and
Hypertext Markup Language.

00:01:56.560 --> 00:02:00.040
But what I remember
most was the first time

00:02:00.040 --> 00:02:01.843
that I viewed source.

00:02:01.843 --> 00:02:03.775
[HUMMING ANGELIC CHORD]

00:02:05.230 --> 00:02:10.539
It was like being let into
this open secret club where

00:02:10.539 --> 00:02:13.540
I could see the HTML for
the site, warts and all,

00:02:13.540 --> 00:02:15.580
and being invited in.

00:02:15.580 --> 00:02:19.900
It was where-- source code
was where people knowingly

00:02:19.900 --> 00:02:24.190
allowed you to see and share all
of this really interesting code

00:02:24.190 --> 00:02:26.110
that allowed you to
accelerate your own work

00:02:26.110 --> 00:02:28.210
and share the expertise.

00:02:28.210 --> 00:02:30.730
So I did what most
first-timers did.

00:02:30.730 --> 00:02:34.630
I copied the HTML
into VI, I edited

00:02:34.630 --> 00:02:36.490
to make it look
like it was my own,

00:02:36.490 --> 00:02:39.370
and I pushed my changes
live, with a link

00:02:39.370 --> 00:02:41.800
back to the original
site, of course.

00:02:41.800 --> 00:02:46.030
And my code, by the way,
didn't look anything like this.

00:02:46.030 --> 00:02:48.040
This looks way
too nice for 1993.

00:02:48.040 --> 00:02:49.920
I had a lot more
table and break tags.

00:02:53.530 --> 00:02:55.960
Well, today, nearly
25 years later,

00:02:55.960 --> 00:02:59.620
we're all members of this
amazing, vibrant, global,

00:02:59.620 --> 00:03:01.020
and growing community.

00:03:01.020 --> 00:03:03.520
Now, we all have our own story
for how we first got started.

00:03:03.520 --> 00:03:06.610
But I bet, for many of you,
it's not too dissimilar to mine.

00:03:06.610 --> 00:03:11.090
It was because you wanted to be
part of this broader community.

00:03:11.090 --> 00:03:13.720
And that's why,
today, we're all here,

00:03:13.720 --> 00:03:16.780
to take a moment to
recognize and really

00:03:16.780 --> 00:03:21.090
celebrate the we in web.

00:03:21.090 --> 00:03:24.930
Because the web is so much more
than any one company, any one

00:03:24.930 --> 00:03:27.400
product, or any one person.

00:03:27.400 --> 00:03:29.740
It's all of us.

00:03:29.740 --> 00:03:33.670
What started with Mosaic
and Navigator in the '90s

00:03:33.670 --> 00:03:36.700
has grown to dozens of web
browsers across the globe,

00:03:36.700 --> 00:03:39.010
each stretching and
improving the end user

00:03:39.010 --> 00:03:41.590
experience in significant ways.

00:03:41.590 --> 00:03:45.130
Microsoft and IE actually
jumpstarted the Ajax era,

00:03:45.130 --> 00:03:48.280
with the XML HTTP
request, bringing

00:03:48.280 --> 00:03:51.430
powerful interactive
apps to the web.

00:03:51.430 --> 00:03:53.770
Apple and Safari ushered
in the mobile web

00:03:53.770 --> 00:03:57.550
with key technologies like
offline and geolocation.

00:03:57.550 --> 00:04:00.040
And of course
Mozilla and Firefox,

00:04:00.040 --> 00:04:02.890
who continue to shape the modern
web, from the initial Phoenix

00:04:02.890 --> 00:04:07.600
Project, to SVG, and Canvas,
and to their critical privacy

00:04:07.600 --> 00:04:10.010
and security work.

00:04:10.010 --> 00:04:13.870
Meanwhile what started off
as a small group of coders

00:04:13.870 --> 00:04:17.560
has now grown into a family of
more than 17 million developers

00:04:17.560 --> 00:04:18.339
worldwide.

00:04:18.339 --> 00:04:21.790
And we're on track to more
than double in the next decade.

00:04:21.790 --> 00:04:24.760
About 1,000 of us are here
in San Francisco today.

00:04:24.760 --> 00:04:26.770
And tens of thousands
more are watching

00:04:26.770 --> 00:04:30.400
on the livestream in meetups
in places such as Amsterdam,

00:04:30.400 --> 00:04:32.410
Brazil, and Uganda.

00:04:32.410 --> 00:04:34.667
Hello, everyone.

00:04:34.667 --> 00:04:36.250
And of course the
fact that each of us

00:04:36.250 --> 00:04:40.060
can contribute to this amazing
community and this web's future

00:04:40.060 --> 00:04:42.970
is what makes all
of this so unique.

00:04:42.970 --> 00:04:44.860
When you consider our
contributions together,

00:04:44.860 --> 00:04:47.150
they are staggering.

00:04:47.150 --> 00:04:52.060
There are now more than 1.5
billion active sites and web

00:04:52.060 --> 00:04:55.800
applications on
the internet today.

00:04:55.800 --> 00:05:03.180
And they're serving more
than 4.5 billion users all

00:05:03.180 --> 00:05:05.050
over the world.

00:05:05.050 --> 00:05:08.730
It is a tremendous
responsibility and opportunity,

00:05:08.730 --> 00:05:11.520
and one that's only possible
because of this incredible web

00:05:11.520 --> 00:05:13.950
platform that we have.

00:05:13.950 --> 00:05:16.630
Now, as a community,
we're going to debate

00:05:16.630 --> 00:05:18.420
and we're going to even argue.

00:05:18.420 --> 00:05:21.750
But that is how we create
something truly great.

00:05:21.750 --> 00:05:23.790
After all, the
contributions to the web

00:05:23.790 --> 00:05:27.420
come from everywhere, with no
single company or individual

00:05:27.420 --> 00:05:28.290
owning it.

00:05:28.290 --> 00:05:32.510
And that is very much
working as intended.

00:05:32.510 --> 00:05:35.120
Celebrating the we
in web is naming

00:05:35.120 --> 00:05:37.790
how we're better together
because of this diversity.

00:05:37.790 --> 00:05:41.030
Because we're all here to
move the web platform forward.

00:05:41.030 --> 00:05:43.940
And events like CDS, with
many different companies

00:05:43.940 --> 00:05:47.870
and developers represented, are
really critical to reminding us

00:05:47.870 --> 00:05:49.488
of this fact.

00:05:49.488 --> 00:05:51.530
If you remember only one
thing from this morning,

00:05:51.530 --> 00:05:57.200
please note that Chrome is here
today and every day to show up

00:05:57.200 --> 00:06:01.390
as one small member of this
much, much bigger community.

00:06:01.390 --> 00:06:03.850
And so with that in
mind, we're here at CDS

00:06:03.850 --> 00:06:06.550
to highlight some of
our recent contributions

00:06:06.550 --> 00:06:08.842
in three key areas.

00:06:08.842 --> 00:06:11.050
So today we're going to talk
first about the platform

00:06:11.050 --> 00:06:12.050
itself.

00:06:12.050 --> 00:06:14.560
And as developers, we're highly
motivated to address some

00:06:14.560 --> 00:06:16.880
of the web's key challenges.

00:06:16.880 --> 00:06:19.060
For example, diversity
and reach of the web

00:06:19.060 --> 00:06:21.590
is core to what is great
about the internet,

00:06:21.590 --> 00:06:24.310
but it's also one of the
reasons why interoperability

00:06:24.310 --> 00:06:26.050
remains a top concern.

00:06:26.050 --> 00:06:28.780
This morning, Jon is going
to share some of our efforts

00:06:28.780 --> 00:06:31.810
to improve interop, as well
as key investments we're

00:06:31.810 --> 00:06:35.980
making in platform performance
and discoverability.

00:06:35.980 --> 00:06:37.967
The second is
developer experience.

00:06:37.967 --> 00:06:40.300
And Dion is going to share
some of the recent work we've

00:06:40.300 --> 00:06:44.450
done on productivity,
frameworks, and open source.

00:06:44.450 --> 00:06:47.900
And finally, the
Chrome browser itself.

00:06:47.900 --> 00:06:50.180
Parisa is going to share
some of our investments

00:06:50.180 --> 00:06:56.240
in a more helpful, inclusive
experience for our users.

00:06:56.240 --> 00:06:59.400
But more importantly,
more than all of that, I

00:06:59.400 --> 00:07:00.902
want to say thank you.

00:07:00.902 --> 00:07:02.860
Thank you for all of you
for being here with us

00:07:02.860 --> 00:07:06.430
this morning, and for spending
two very important days with us

00:07:06.430 --> 00:07:09.430
as you continue and we continue
to invest in this broader

00:07:09.430 --> 00:07:10.700
community.

00:07:10.700 --> 00:07:13.300
As I said, the web is so
much more than one company,

00:07:13.300 --> 00:07:15.280
one product, or one person.

00:07:15.280 --> 00:07:16.960
And it's about how
we come together

00:07:16.960 --> 00:07:19.030
to move the platform forward.

00:07:19.030 --> 00:07:22.460
We're really grateful for a
chance to share with you today.

00:07:22.460 --> 00:07:25.483
And so let's go ahead and
get started with Platform.

00:07:25.483 --> 00:07:28.864
[MUSIC PLAYING, APPLAUSE]

00:07:34.347 --> 00:07:35.430
JON KRAFCIK: Thanks, Anil.

00:07:37.940 --> 00:07:40.400
The most exciting
part about the web

00:07:40.400 --> 00:07:42.800
is that it enables
frictionless routing.

00:07:42.800 --> 00:07:44.750
You can share any
experience through a link,

00:07:44.750 --> 00:07:46.640
or discover it through
a search result,

00:07:46.640 --> 00:07:48.830
and go right in with one tap.

00:07:48.830 --> 00:07:50.990
The web's billions of
users and millions of sites

00:07:50.990 --> 00:07:52.340
have been around for a while.

00:07:52.340 --> 00:07:55.010
So where do we expect
the next wave of growth

00:07:55.010 --> 00:07:57.270
to come to the web?

00:07:57.270 --> 00:07:59.730
It's estimated that most
of the new internet users

00:07:59.730 --> 00:08:02.650
globally will be coming online
in countries like India,

00:08:02.650 --> 00:08:08.020
Indonesia, Mexico, and Nigeria,
users in developing markets,

00:08:08.020 --> 00:08:10.600
across access to internet
through smartphones

00:08:10.600 --> 00:08:12.740
with constrained
memory and storage.

00:08:12.740 --> 00:08:16.120
So it's critical that web
applications are lightweight

00:08:16.120 --> 00:08:19.000
and have great performance.

00:08:19.000 --> 00:08:21.580
And in both developing
and developed markets,

00:08:21.580 --> 00:08:24.670
teenagers and young adults are
growing up with smartphones

00:08:24.670 --> 00:08:26.890
and frequently
computing cross-device.

00:08:26.890 --> 00:08:29.080
These users have very
high expectations

00:08:29.080 --> 00:08:31.340
around the overall
web experience.

00:08:31.340 --> 00:08:33.850
So it's important for us
to equip the web platform

00:08:33.850 --> 00:08:36.309
with powerful app
capabilities, and to ensure

00:08:36.309 --> 00:08:39.669
the experiences remain
smooth, responsive, and easy

00:08:39.669 --> 00:08:41.780
to navigate.

00:08:41.780 --> 00:08:44.510
We see big brands
recognizing this shift.

00:08:44.510 --> 00:08:47.770
With 65% of their first-time
users landing on mobile web,

00:08:47.770 --> 00:08:50.000
Airbnb recently
built their website

00:08:50.000 --> 00:08:53.120
into a progressive web app,
delivering better performance

00:08:53.120 --> 00:08:55.142
and user experience.

00:08:55.142 --> 00:08:57.350
Seeing the results that they
and many of our partners

00:08:57.350 --> 00:08:59.150
have achieved by
investing in the web

00:08:59.150 --> 00:09:01.610
inspires us to keep
pushing the web forward

00:09:01.610 --> 00:09:05.260
and continue making
it more powerful.

00:09:05.260 --> 00:09:07.660
With this in mind,
here are the themes

00:09:07.660 --> 00:09:10.000
of our recent and future
developments to the web

00:09:10.000 --> 00:09:11.140
platform.

00:09:11.140 --> 00:09:14.740
We want to power fully
capable web applications,

00:09:14.740 --> 00:09:18.490
deliver to users instant and
responsive web experiences,

00:09:18.490 --> 00:09:21.760
and make transactions
between users, and merchants,

00:09:21.760 --> 00:09:24.770
and payment providers
seamless and smooth.

00:09:24.770 --> 00:09:27.590
Let's dive into the first one.

00:09:27.590 --> 00:09:30.680
To ensure the web apps
ecosystem continues to thrive,

00:09:30.680 --> 00:09:32.600
developers need the
same capabilities

00:09:32.600 --> 00:09:34.440
as those found in native apps.

00:09:34.440 --> 00:09:37.790
This includes application
installation, discovery,

00:09:37.790 --> 00:09:40.340
integrations, and
multi-language support

00:09:40.340 --> 00:09:44.290
to fully achieve feature parity.

00:09:44.290 --> 00:09:47.230
Install is a foundational
feature of a progressive web

00:09:47.230 --> 00:09:47.980
app.

00:09:47.980 --> 00:09:51.430
And Chrome has supported
Install on mobile since 2016.

00:09:51.430 --> 00:09:54.160
With the web, you can
focus on building your app,

00:09:54.160 --> 00:09:56.285
and the browser takes care
of the details of how it

00:09:56.285 --> 00:09:59.130
will work on the user's device.

00:09:59.130 --> 00:10:01.440
And over the past year,
we've taken a step further,

00:10:01.440 --> 00:10:04.440
with the launch of Progressive
Web App Install for desktop

00:10:04.440 --> 00:10:05.970
directly from the browser.

00:10:05.970 --> 00:10:09.220
You can now install on
Windows, Mac, Linux,

00:10:09.220 --> 00:10:12.190
and of course Chrome OS.

00:10:12.190 --> 00:10:14.920
To take installation and
discovery of web applications

00:10:14.920 --> 00:10:17.860
to where your users truly
are, earlier this year, we

00:10:17.860 --> 00:10:20.320
launched Trusted Web Activities.

00:10:20.320 --> 00:10:23.050
Web content has been part
of the Android ecosystem

00:10:23.050 --> 00:10:25.330
for a long time via WebView.

00:10:25.330 --> 00:10:29.320
Trusted Web Activities offers a
high-performance, more secure,

00:10:29.320 --> 00:10:31.240
and user-choice-preserving
way to build

00:10:31.240 --> 00:10:33.340
apps that use the web stack.

00:10:33.340 --> 00:10:36.610
This is our recommended way
to upload and distribute

00:10:36.610 --> 00:10:39.900
high-quality PWAs in Play.

00:10:39.900 --> 00:10:42.630
Partners such as Myntra, the
leading Indian e-commerce

00:10:42.630 --> 00:10:44.730
brand, have used
Trusted Web Activities

00:10:44.730 --> 00:10:47.740
to target their users
on lower-end devices,

00:10:47.740 --> 00:10:52.770
and increased conversion rate
for these users by over 115%.

00:10:52.770 --> 00:10:56.055
Other early adopters include
Latin-based publisher Terra,

00:10:56.055 --> 00:10:59.100
and Indian affordable
hotels chain Oyo Rooms.

00:10:59.100 --> 00:11:03.710
Oyo will be joining us later
today to share their story.

00:11:03.710 --> 00:11:06.620
We're particularly excited
about the cross-browser support

00:11:06.620 --> 00:11:08.330
Trusted Web
Activities is getting.

00:11:08.330 --> 00:11:10.220
Our friends at
Mozilla have confirmed

00:11:10.220 --> 00:11:12.920
they're experimenting with
TWA in their Firefox Preview

00:11:12.920 --> 00:11:14.000
Nightly browser.

00:11:14.000 --> 00:11:16.730
And Samsung has committed to
ship their own Trusted Web

00:11:16.730 --> 00:11:18.230
Activity in the near future.

00:11:21.060 --> 00:11:23.275
In 2015, we enabled
notifications

00:11:23.275 --> 00:11:25.650
through service workers to
allow meaningful re-engagement

00:11:25.650 --> 00:11:26.790
for web apps.

00:11:26.790 --> 00:11:29.460
Over the past few years,
we've added many features

00:11:29.460 --> 00:11:33.710
to notifications, including
action images, buttons,

00:11:33.710 --> 00:11:37.730
and most recently, notification
triggers that give developers

00:11:37.730 --> 00:11:39.770
the ability to
schedule notifications

00:11:39.770 --> 00:11:42.950
even if your user's device
is on airplane mode.

00:11:42.950 --> 00:11:44.408
With this last
addition, we believe

00:11:44.408 --> 00:11:46.367
that notifications have
achieved feature parity

00:11:46.367 --> 00:11:47.960
with their native
app counterparts.

00:11:47.960 --> 00:11:50.510
And what's even more exciting
is a Trusted Web Activities

00:11:50.510 --> 00:11:53.930
get all these
benefits by default.

00:11:53.930 --> 00:11:56.180
We're committed to improving
the signal-to-noise ratio

00:11:56.180 --> 00:11:58.970
of notifications, and we'll
share more through our CDS

00:11:58.970 --> 00:12:01.780
Lightning Talk series.

00:12:01.780 --> 00:12:05.510
We want web developers to
create the best app experiences.

00:12:05.510 --> 00:12:07.150
And we've been
working thoughtfully

00:12:07.150 --> 00:12:10.750
to bring APIs that unlock
OS-level capabilities.

00:12:10.750 --> 00:12:13.420
Contact Picker API
allows your users

00:12:13.420 --> 00:12:16.550
to share contacts and limited
details with a web app,

00:12:16.550 --> 00:12:19.180
as you can see here
in Twitter's PWA.

00:12:19.180 --> 00:12:22.480
We're putting a lot of care into
the design and implementation

00:12:22.480 --> 00:12:26.170
of this API to ensure users have
full transparency and control.

00:12:26.170 --> 00:12:28.570
And we're working closely with
some of our early adopters

00:12:28.570 --> 00:12:31.390
to get this right.

00:12:31.390 --> 00:12:34.420
Desktop apps, especially
those focused on productivity,

00:12:34.420 --> 00:12:36.730
have long wanted
to come on the web.

00:12:36.730 --> 00:12:40.090
But a major blocker has been
a lack of local file system

00:12:40.090 --> 00:12:40.900
support.

00:12:40.900 --> 00:12:42.940
So I'm happy to
announce that we're

00:12:42.940 --> 00:12:46.900
bringing the very popular Native
File System API to Chrome.

00:12:46.900 --> 00:12:49.150
This will allow web apps
to interact with files

00:12:49.150 --> 00:12:50.750
on their user's local device.

00:12:50.750 --> 00:12:53.110
Great for photo and
video editors, IDEs,

00:12:53.110 --> 00:12:54.810
productivity tools, and more.

00:12:54.810 --> 00:12:57.310
You can see it in action here
with apps like Corel's Graphic

00:12:57.310 --> 00:12:57.810
Designer.

00:13:00.730 --> 00:13:03.280
In addition to giving developers
powerful OS capabilities

00:13:03.280 --> 00:13:05.590
and deeper integration,
we want developers

00:13:05.590 --> 00:13:07.690
to be able to port
over their applications

00:13:07.690 --> 00:13:10.480
with greater performance
and reliability.

00:13:10.480 --> 00:13:13.180
WebAssembly allows you to bring
your existing mobile and/or

00:13:13.180 --> 00:13:15.820
desktop applications
and libraries to the web

00:13:15.820 --> 00:13:18.100
without needing to rewrite
them in JavaScript.

00:13:18.100 --> 00:13:20.860
It uses a combination
of low-level primitives

00:13:20.860 --> 00:13:22.900
and strong static
typing to deliver

00:13:22.900 --> 00:13:25.670
predictable performance.

00:13:25.670 --> 00:13:28.100
With additional features
like threads and SIMD,

00:13:28.100 --> 00:13:32.570
applications can make full use
of modern multicore processors.

00:13:32.570 --> 00:13:34.370
We're seeing many
web apps, especially

00:13:34.370 --> 00:13:36.695
those focused on desktops
or large screens,

00:13:36.695 --> 00:13:39.320
taking advantage of WebAssembly
to bring their apps to the web.

00:13:45.062 --> 00:13:46.770
We're announcing at
the first WebAssembly

00:13:46.770 --> 00:13:48.750
summit will take place
at the Google office

00:13:48.750 --> 00:13:50.940
in Mountain View on
February 10, 2020,

00:13:50.940 --> 00:13:54.120
to discuss upcoming features
and share more examples.

00:13:54.120 --> 00:13:56.150
You can join this public
group to learn more.

00:13:58.950 --> 00:14:01.073
Moving on to our second
theme, let's talk

00:14:01.073 --> 00:14:02.490
about what we're
doing to make web

00:14:02.490 --> 00:14:07.800
experiences instant,
rich, and more responsive.

00:14:07.800 --> 00:14:10.590
We're moving the web towards
fast, beautiful, jank-free

00:14:10.590 --> 00:14:13.230
navigation animations,
as well as great offline

00:14:13.230 --> 00:14:16.200
and low-bandwidth experiences.

00:14:16.200 --> 00:14:19.330
At I/O this May, we announced
that signed exchanges, services

00:14:19.330 --> 00:14:21.850
that load your content faster
through privacy-preserving

00:14:21.850 --> 00:14:26.640
prefetch, were available
in Chrome to all users.

00:14:26.640 --> 00:14:29.060
We also gave a preview
of an experimental API

00:14:29.060 --> 00:14:31.700
called Portals, enabling
you to dramatically improve

00:14:31.700 --> 00:14:34.670
the user experience of
navigations across your site.

00:14:34.670 --> 00:14:37.910
Portals allow you to create
seamless navigation experiences

00:14:37.910 --> 00:14:40.550
by pre-rendering content
and optionally embedding it.

00:14:40.550 --> 00:14:42.230
And like IFrames,
portals give you

00:14:42.230 --> 00:14:44.780
the ability to navigate
users into this content,

00:14:44.780 --> 00:14:46.610
and all at lightning speed.

00:14:46.610 --> 00:14:48.655
Early Portals
partners like Fandango

00:14:48.655 --> 00:14:50.780
built this fun new transition
style for their users

00:14:50.780 --> 00:14:53.960
while navigating
within their site.

00:14:53.960 --> 00:14:55.790
Notice how there
is no load time,

00:14:55.790 --> 00:14:57.740
and the page rotates
to the right, a style

00:14:57.740 --> 00:15:00.670
you don't see on
the web too often.

00:15:00.670 --> 00:15:02.420
We're pleased to
announce that the Portals

00:15:02.420 --> 00:15:04.730
API is available behind a
flag for you to experiment

00:15:04.730 --> 00:15:07.010
with, and will soon be
available in origin trial

00:15:07.010 --> 00:15:08.810
for same-origin use cases.

00:15:08.810 --> 00:15:11.150
We are excited to
get your feedback.

00:15:11.150 --> 00:15:15.040
With Portals, you can build
amazing user experiences.

00:15:15.040 --> 00:15:17.660
But getting users to discover
and try these new experiences

00:15:17.660 --> 00:15:20.045
can be challenging,
especially on mobile.

00:15:20.045 --> 00:15:21.920
So we've been working
on a collection of APIs

00:15:21.920 --> 00:15:24.110
and browser features
designed to improve

00:15:24.110 --> 00:15:27.240
the discoverability of the web.

00:15:27.240 --> 00:15:29.310
Imagine you're building
an app that periodically

00:15:29.310 --> 00:15:32.190
has new content, and you want
to deliver this content even

00:15:32.190 --> 00:15:33.910
when the browser isn't open.

00:15:33.910 --> 00:15:35.730
For example, you could
deliver that content

00:15:35.730 --> 00:15:38.650
while the user is
connected to home Wi-Fi,

00:15:38.650 --> 00:15:41.140
before they go for their
commute, which might not

00:15:41.140 --> 00:15:44.000
have great connectivity.

00:15:44.000 --> 00:15:46.540
This is why we've been working
on an API call Periodic

00:15:46.540 --> 00:15:48.220
Background Sync.

00:15:48.220 --> 00:15:51.890
This API can practically cache
content at regular intervals,

00:15:51.890 --> 00:15:56.100
making the content instantly
available for the user.

00:15:56.100 --> 00:15:58.560
And to help users find the
best content, whether online

00:15:58.560 --> 00:16:01.890
or offline, we've built
the Content Indexing API.

00:16:01.890 --> 00:16:04.380
It allows you to make
your offline-enabled and

00:16:04.380 --> 00:16:07.650
instantly-available content
visible to the user.

00:16:07.650 --> 00:16:10.290
And we're exploring showing some
of this content on the New Tab

00:16:10.290 --> 00:16:14.520
page and other
surfaces in Chrome.

00:16:14.520 --> 00:16:16.830
Now, these readily
available pieces of content

00:16:16.830 --> 00:16:19.200
are quite handy for discovery.

00:16:19.200 --> 00:16:22.410
But what if you want to make web
loading disappear, supporting

00:16:22.410 --> 00:16:24.300
completely online users?

00:16:24.300 --> 00:16:25.890
What if you wanted
your content or app

00:16:25.890 --> 00:16:27.870
to be flexibly
distributed, including

00:16:27.870 --> 00:16:31.240
shared virally between users?

00:16:31.240 --> 00:16:35.080
A web bundle is a new platform
primitive for packaging up

00:16:35.080 --> 00:16:36.860
a website or web app.

00:16:36.860 --> 00:16:40.570
It's blazingly fast to load,
unlocks easier offline support,

00:16:40.570 --> 00:16:42.100
and is highly shareable.

00:16:42.100 --> 00:16:44.410
Developers can use these
self-contained web bundles

00:16:44.410 --> 00:16:47.590
to solve a flaky
connection issue for users.

00:16:47.590 --> 00:16:51.370
And a web bundle can change
content distribution entirely.

00:16:51.370 --> 00:16:54.520
A bundle can be shared between
devices, over chat or email,

00:16:54.520 --> 00:16:56.710
on blogs alongside
a review, or even

00:16:56.710 --> 00:17:00.250
on physical storage
like a USB stick.

00:17:00.250 --> 00:17:03.400
In fact, we've bundled the
web.dev website, as well as

00:17:03.400 --> 00:17:05.740
Squoosh, an image
optimization web app

00:17:05.740 --> 00:17:09.010
that we demoed at CDS last
year on a dino-shaped USB flash

00:17:09.010 --> 00:17:11.450
drive that you have
in your swag bag.

00:17:11.450 --> 00:17:13.560
And we would love your feedback.

00:17:13.560 --> 00:17:16.359
Our dino wanted a gaming
friend, so we also

00:17:16.359 --> 00:17:18.490
threw in PROXX, the
Minesweeper-inspired web game

00:17:18.490 --> 00:17:22.569
that we launched at
I/O earlier this year.

00:17:22.569 --> 00:17:25.839
Form controls have long been
the bane of developers' lives,

00:17:25.839 --> 00:17:28.359
to the point where many build
their own versions of controls

00:17:28.359 --> 00:17:30.630
that are already in the browser.

00:17:30.630 --> 00:17:32.380
We've worked with our
friends at Microsoft

00:17:32.380 --> 00:17:35.710
to re-skin and improve the
accessibility of all form

00:17:35.710 --> 00:17:36.700
elements.

00:17:36.700 --> 00:17:39.900
And we're excited that
these will be shipping soon

00:17:39.900 --> 00:17:43.763
in both Edge and Chrome.

00:17:43.763 --> 00:17:45.430
We're also [INAUDIBLE]
features that you

00:17:45.430 --> 00:17:48.040
need to improve the look
and feel of your sites.

00:17:48.040 --> 00:17:50.945
Earlier this year, we
launched Backdrop Filter

00:17:50.945 --> 00:17:53.320
so developers can build new
visual effects without having

00:17:53.320 --> 00:17:55.720
to hard-code images.

00:17:55.720 --> 00:17:58.578
And we're continuing our
investments in Houdini,

00:17:58.578 --> 00:18:00.370
where you can now use
the Register Property

00:18:00.370 --> 00:18:03.760
API to animate CSS variables
that were previously

00:18:03.760 --> 00:18:07.000
impossible to animate.

00:18:07.000 --> 00:18:09.190
We've been working on
making rendering and layout

00:18:09.190 --> 00:18:10.510
performance, faster.

00:18:10.510 --> 00:18:14.280
Earlier this year, we landed
the first phase of LayoutNG

00:18:14.280 --> 00:18:15.490
in Chrome.

00:18:15.490 --> 00:18:18.910
LayoutNG is a new implementation
of Chrome's layout algorithm

00:18:18.910 --> 00:18:22.100
that promises much greater
performance and reliability.

00:18:22.100 --> 00:18:24.790
It's optimized for
modern, dynamic content

00:18:24.790 --> 00:18:27.520
and the wide variety of text
languages now on the web,

00:18:27.520 --> 00:18:33.590
and most importantly, improves
the speed of rendering emojis.

00:18:33.590 --> 00:18:37.820
Semicolon, close parentheses.

00:18:37.820 --> 00:18:39.980
Display Locking
is a new API that

00:18:39.980 --> 00:18:42.260
can have a massive impact
on rendering performance

00:18:42.260 --> 00:18:43.160
on the web.

00:18:43.160 --> 00:18:46.340
By locking an area of the DOM
and stopping it from rendering,

00:18:46.340 --> 00:18:48.890
users can experience a
much higher frame rate

00:18:48.890 --> 00:18:50.740
when scrolling through
long documents.

00:18:50.740 --> 00:18:52.540
When a locked DOM
isn't rendered,

00:18:52.540 --> 00:18:55.070
it is still searchable, which
is great for accessibility,

00:18:55.070 --> 00:18:57.420
and page search, and
infinite scrollers.

00:18:57.420 --> 00:18:59.630
And the best part is,
with Display Locking,

00:18:59.630 --> 00:19:03.410
you can now perform
batch rendering updates.

00:19:03.410 --> 00:19:05.600
Moving on to our third
theme, let's talk

00:19:05.600 --> 00:19:08.762
about seamless and smooth
transactions on the web.

00:19:08.762 --> 00:19:10.220
One of the biggest
opportunities we

00:19:10.220 --> 00:19:12.290
have to increase web
developers' success

00:19:12.290 --> 00:19:14.980
is to improve their
overall transaction volume,

00:19:14.980 --> 00:19:18.380
reducing the friction between
merchants and their users,

00:19:18.380 --> 00:19:21.500
making it easier for users
to let us know who they are,

00:19:21.500 --> 00:19:23.420
to authenticate their
identity securely,

00:19:23.420 --> 00:19:26.030
and to complete their purchases
by assisting with payment

00:19:26.030 --> 00:19:28.930
handling and fraud prevention.

00:19:28.930 --> 00:19:31.720
WebAuthn allows
hardware-secured, second-factor

00:19:31.720 --> 00:19:34.570
authentication using
biometrics like fingerprints,

00:19:34.570 --> 00:19:36.490
or hardware keys like a YubiKey.

00:19:36.490 --> 00:19:38.920
WebAuthn continues
to see great growth.

00:19:38.920 --> 00:19:41.240
Businesses like GitHub
and many more sites,

00:19:41.240 --> 00:19:43.960
including Google Google
itself, have integrated it

00:19:43.960 --> 00:19:46.510
into their authentication
flows to vastly improve

00:19:46.510 --> 00:19:48.928
security for their users.

00:19:48.928 --> 00:19:51.220
We've also heard that many
companies all over the world

00:19:51.220 --> 00:19:53.950
need a way to validate the
user's phone number, especially

00:19:53.950 --> 00:19:57.220
in countries like India, where
not all users have email.

00:19:57.220 --> 00:20:01.520
So we're pleased to announce
this SMS receiver API.

00:20:01.520 --> 00:20:04.390
This API allows you to verify
a phone number automatically,

00:20:04.390 --> 00:20:07.390
and with less user abandonment,
using the SMS verification

00:20:07.390 --> 00:20:10.070
codes that users
input manually today.

00:20:10.070 --> 00:20:11.770
It's great to see
early partners,

00:20:11.770 --> 00:20:14.560
like India's food delivery
service, Swiggy, implement it

00:20:14.560 --> 00:20:17.820
into their PWA.

00:20:17.820 --> 00:20:21.390
We're working on making payment
on the web simpler and safer.

00:20:21.390 --> 00:20:24.450
Three years ago, we launched
the Payment Request API.

00:20:24.450 --> 00:20:27.990
We're now seeing great adoption,
with over 15,000 origins

00:20:27.990 --> 00:20:30.780
using web payments to complete
a transaction in Chrome.

00:20:30.780 --> 00:20:33.360
Even better, web payment
API transaction volume

00:20:33.360 --> 00:20:35.880
has doubled since the
beginning of the year.

00:20:35.880 --> 00:20:38.580
Our focus for the next year
is to add more capabilities

00:20:38.580 --> 00:20:41.248
to Web Payments API, enable
more sites and native apps

00:20:41.248 --> 00:20:42.540
to be able to process payments.

00:20:45.850 --> 00:20:48.610
The web's success
relies on the principle

00:20:48.610 --> 00:20:52.600
of open source, transparency,
collaboration, and most

00:20:52.600 --> 00:20:54.610
importantly, community.

00:20:54.610 --> 00:20:57.220
We launched Chromium as
an open-source project

00:20:57.220 --> 00:20:59.590
with the vision to allow
everyone to contribute,

00:20:59.590 --> 00:21:01.990
and anyone to share
our foundations.

00:21:01.990 --> 00:21:05.050
And today we're happy
to see that almost

00:21:05.050 --> 00:21:10.138
every individual browser
project is open source.

00:21:10.138 --> 00:21:12.430
We believe that working
successfully with other browser

00:21:12.430 --> 00:21:16.670
vendors can unlock significant
innovations on the web.

00:21:16.670 --> 00:21:18.800
Working with Firefox,
Chrome was able to implement

00:21:18.800 --> 00:21:21.980
a difficult-to-ship feature,
stale-while-revalidate,

00:21:21.980 --> 00:21:23.630
that, based on
experimental data,

00:21:23.630 --> 00:21:26.660
has lifted publisher
revenue by 0.5% thanks

00:21:26.660 --> 00:21:29.150
to a 2% increase in
early ad script loads,

00:21:29.150 --> 00:21:33.475
and resulting 0.3% ad
impression increase.

00:21:33.475 --> 00:21:35.600
We're also excited to see
the amazing contributions

00:21:35.600 --> 00:21:37.830
from our friends at Edge,
who we recently welcomed

00:21:37.830 --> 00:21:39.430
to the Chromium ecosystem.

00:21:39.430 --> 00:21:41.450
They're already making
major improvements

00:21:41.450 --> 00:21:46.310
to accessibility, scrolling,
and media battery life.

00:21:46.310 --> 00:21:50.150
We want to continue working
with our browsers and ecosystem

00:21:50.150 --> 00:21:53.173
partners to bring many more wins
for our developers and users.

00:21:53.173 --> 00:21:54.590
And to speak more
about what we're

00:21:54.590 --> 00:21:56.730
doing to unlock
developer success,

00:21:56.730 --> 00:21:59.074
let me invite Dion to the stage.

00:21:59.074 --> 00:22:01.996
[MUSIC PLAYING, APPLAUSE]

00:22:04.920 --> 00:22:07.290
DION ALMAER: Thanks, Jon.

00:22:07.290 --> 00:22:09.870
I considered rebranding myself
the Caps Lock Dion today,

00:22:09.870 --> 00:22:12.835
but probably shouldn't do that--

00:22:12.835 --> 00:22:13.710
little cheap, I know.

00:22:18.210 --> 00:22:22.320
So as we've heard, we think
the open web is pretty special.

00:22:22.320 --> 00:22:25.080
Jon mentioned the low friction
of links, and how they get you

00:22:25.080 --> 00:22:27.420
immediately into an experience.

00:22:27.420 --> 00:22:30.630
And when someone browses
from my site to your site,

00:22:30.630 --> 00:22:34.360
they feel the web as one.

00:22:34.360 --> 00:22:37.450
So how does the
web feel in 2019?

00:22:37.450 --> 00:22:41.320
We use the HTTP Archive to
see how the web is built,

00:22:41.320 --> 00:22:43.960
and the Chrome User
Experience Report, or CRUX,

00:22:43.960 --> 00:22:46.130
to see how it's experienced.

00:22:46.130 --> 00:22:48.040
And this story feels promising.

00:22:48.040 --> 00:22:50.050
Over the past year, we've
seen positive growth

00:22:50.050 --> 00:22:54.280
in the percentage of sites,
with fast first contentful paint

00:22:54.280 --> 00:22:56.980
and first input delay,
our core metrics

00:22:56.980 --> 00:22:59.905
for loading and interactivity.

00:22:59.905 --> 00:23:02.030
Now, it's great that the
web at large is improving.

00:23:02.030 --> 00:23:05.040
But we also know there's a
little bit of work to be done.

00:23:05.040 --> 00:23:08.010
And do you know how
your sites are doing?

00:23:08.010 --> 00:23:09.750
One simple way to
find out is just

00:23:09.750 --> 00:23:12.330
to enter a URL into
PageSpeed Insights

00:23:12.330 --> 00:23:14.430
to get actionable
recommendations

00:23:14.430 --> 00:23:16.630
for a single page.

00:23:16.630 --> 00:23:18.780
Now, if you need help
identifying hotspots

00:23:18.780 --> 00:23:22.240
or potential problems
across your site, good news,

00:23:22.240 --> 00:23:25.380
we just released a new speed
report in the Search Console,

00:23:25.380 --> 00:23:28.200
which will give you insights
by showing groups of pages

00:23:28.200 --> 00:23:30.810
and how they perform
for each key metric that

00:23:30.810 --> 00:23:33.770
is captured by CRUX.

00:23:33.770 --> 00:23:35.960
Now we know that measuring
user experience quality

00:23:35.960 --> 00:23:37.820
is multifaceted,
and we're always

00:23:37.820 --> 00:23:41.210
working to integrate metrics
that tell a fuller picture.

00:23:41.210 --> 00:23:44.420
This week, you'll hear us
talking about some new metrics.

00:23:44.420 --> 00:23:48.590
For example, LCP, or
Largest Contentful Paint,

00:23:48.590 --> 00:23:51.710
measures how quickly users
see the largest and often most

00:23:51.710 --> 00:23:56.630
meaningful content on a page,
like a hero image or main text.

00:23:56.630 --> 00:24:00.080
LCP is built on top of the
element timing API, which

00:24:00.080 --> 00:24:05.550
allows you to manually annotate
elements that you care about.

00:24:05.550 --> 00:24:08.720
Now, we've all experienced this
moment, when a paint changes

00:24:08.720 --> 00:24:10.430
just when you tap.

00:24:10.430 --> 00:24:12.070
It's always incredibly
frustrating.

00:24:12.070 --> 00:24:16.080
It'll happen to me, probably,
again this Black Friday.

00:24:16.080 --> 00:24:19.400
So with CLS, or
Cumulative Layout Shift,

00:24:19.400 --> 00:24:21.080
it measures the degree
to which content

00:24:21.080 --> 00:24:23.660
may be shifting on the screen.

00:24:23.660 --> 00:24:26.060
This metric is built on
top of the Layout Stability

00:24:26.060 --> 00:24:31.590
API, which enables you to
identify and fix such issues.

00:24:31.590 --> 00:24:33.290
So each of these new
metrics are backed

00:24:33.290 --> 00:24:35.990
with specs and web
platform tests,

00:24:35.990 --> 00:24:38.920
allowing run providers
to collect them.

00:24:38.920 --> 00:24:41.390
And we're really happy
to see key ecosystem

00:24:41.390 --> 00:24:43.700
players such as
Calibre and SpeedCurve

00:24:43.700 --> 00:24:47.945
integrating these metrics
into their products.

00:24:47.945 --> 00:24:49.320
And we spend a
lot of time diving

00:24:49.320 --> 00:24:51.660
into data from the
HTTP Archive and CRUX,

00:24:51.660 --> 00:24:55.650
as it gives us insights on where
to focus our platform efforts.

00:24:55.650 --> 00:24:58.140
This real-world data, we
think, is really critical,

00:24:58.140 --> 00:25:00.750
which is why we ensure that
it's fully available to you

00:25:00.750 --> 00:25:02.130
and the entire community.

00:25:05.110 --> 00:25:06.910
Now, it's also kind
of fun to poke around

00:25:06.910 --> 00:25:08.420
in the data little bit.

00:25:08.420 --> 00:25:10.060
For example,
hypothetically speaking,

00:25:10.060 --> 00:25:11.920
maybe you're up late
the night before

00:25:11.920 --> 00:25:14.957
giving a talk in the keynote,
trying to think about things.

00:25:14.957 --> 00:25:16.540
And you find yourself
wondering, like,

00:25:16.540 --> 00:25:20.060
what is the largest
z-Index value on the web?

00:25:20.060 --> 00:25:23.600
So you take a look at HTTP
Archive, and what do you think?

00:25:23.600 --> 00:25:25.380
Any guesses?

00:25:25.380 --> 00:25:27.340
10?

00:25:27.340 --> 00:25:28.603
Maybe higher?

00:25:28.603 --> 00:25:30.415
[LAUGHTER]

00:25:32.230 --> 00:25:33.700
Anyone?

00:25:33.700 --> 00:25:34.640
1,000?

00:25:34.640 --> 00:25:35.620
A million?

00:25:35.620 --> 00:25:40.510
Would you be shocked
at 780 digits?

00:25:40.510 --> 00:25:43.340
That's more than a
googol of digits.

00:25:43.340 --> 00:25:44.350
That's a lot of digits.

00:25:44.350 --> 00:25:46.475
And so I just got thinking
about how, like, there's

00:25:46.475 --> 00:25:49.810
some poor web
developer, and they're

00:25:49.810 --> 00:25:52.900
shouting at the screen,
div, I need you on top.

00:25:52.900 --> 00:25:55.030
[LAUGHTER]

00:25:55.030 --> 00:25:57.700
And then you got to take a
look at the actual code, right?

00:25:57.700 --> 00:25:59.080
This is the actual code.

00:25:59.080 --> 00:26:03.050
And I love the "important" at
the end, the "!important--"

00:26:03.050 --> 00:26:04.730
make sure.

00:26:04.730 --> 00:26:06.010
And the comment at the top--

00:26:06.010 --> 00:26:06.790
"FIXED."

00:26:06.790 --> 00:26:09.010
Done, we're all done.

00:26:09.010 --> 00:26:11.320
It's fantastic.

00:26:11.320 --> 00:26:13.660
Love the web.

00:26:13.660 --> 00:26:18.310
So data is great, but insights
lead to fixes and improvement.

00:26:18.310 --> 00:26:19.810
We're often asked,
how do I actually

00:26:19.810 --> 00:26:21.880
act on this information?

00:26:21.880 --> 00:26:24.460
So we collaborated with experts
from across the community

00:26:24.460 --> 00:26:27.670
to build what we're
calling the Web Almanac.

00:26:27.670 --> 00:26:30.460
We're launching the
first 17 chapters today,

00:26:30.460 --> 00:26:36.202
on topics from markup, to
HTTP, to PWA, and many more.

00:26:36.202 --> 00:26:37.660
Now I want to give
a big shout-out,

00:26:37.660 --> 00:26:39.202
because there's tons
of collaborators

00:26:39.202 --> 00:26:40.530
from across the industry.

00:26:40.530 --> 00:26:42.880
And I want to thank them for
not only the amazing work

00:26:42.880 --> 00:26:44.650
they did on this
project, but all they

00:26:44.650 --> 00:26:45.857
do for the web in general.

00:26:45.857 --> 00:26:48.190
So can we give around of
applause for the collaborators?

00:26:48.190 --> 00:26:50.686
[APPLAUSE]

00:26:56.000 --> 00:26:57.890
So, many of you also
go the extra mile

00:26:57.890 --> 00:27:00.050
to move the metrics in
the right direction.

00:27:00.050 --> 00:27:02.450
And we want to reward
you for the hard work

00:27:02.450 --> 00:27:05.565
that results in great
web experiences.

00:27:05.565 --> 00:27:07.940
So we've been looking at how
can we highlight and surface

00:27:07.940 --> 00:27:10.340
more quality
signals to our users

00:27:10.340 --> 00:27:15.540
across search and Chrome's UI,
with speed as a core metric.

00:27:15.540 --> 00:27:18.720
So we've been playing around
with UI explorations like this

00:27:18.720 --> 00:27:21.030
to make sure that we give
you even more of an incentive

00:27:21.030 --> 00:27:22.130
to work on perf.

00:27:22.130 --> 00:27:23.713
You're going to be
excited about this.

00:27:28.160 --> 00:27:30.997
So next up, we want to talk
more about the ecosystem

00:27:30.997 --> 00:27:33.580
and the tooling that's going to
help you create this great web

00:27:33.580 --> 00:27:34.833
content.

00:27:34.833 --> 00:27:37.250
I think it's pretty safe to
say that no other platform has

00:27:37.250 --> 00:27:40.010
quite the same level of
innovation in user space,

00:27:40.010 --> 00:27:43.040
through frameworks, libraries,
and CMSes, many of which

00:27:43.040 --> 00:27:46.150
have become household names.

00:27:46.150 --> 00:27:48.640
Adam Bradley from Ionic
recently asked for feedback

00:27:48.640 --> 00:27:50.470
on the history of
web frameworks, which

00:27:50.470 --> 00:27:53.560
sparked a typical healthy
discussion on Twitter

00:27:53.560 --> 00:27:56.750
and a trip down memory lane.

00:27:56.750 --> 00:27:59.040
And we love how each
framework innovates and learns

00:27:59.040 --> 00:28:00.270
from each other.

00:28:00.270 --> 00:28:02.370
We've been excited to see
the innovation continue

00:28:02.370 --> 00:28:06.090
across the board, especially
in the area of performance

00:28:06.090 --> 00:28:08.960
and developer experience.

00:28:08.960 --> 00:28:11.360
This is very much
true for Next.js,

00:28:11.360 --> 00:28:13.970
an impressive framework
that gives React developers

00:28:13.970 --> 00:28:18.870
an end-to-end system to allow
for scalable performance.

00:28:18.870 --> 00:28:20.600
We've been working
with the Next.js team,

00:28:20.600 --> 00:28:21.975
and thought it'd
be fun to invite

00:28:21.975 --> 00:28:24.380
Guillermo Rauch
from Zeit onstage

00:28:24.380 --> 00:28:26.370
to take us through
the journey so far.

00:28:26.370 --> 00:28:27.664
Let's welcome Guillermo.

00:28:27.664 --> 00:28:31.122
[MUSIC PLAYING, APPLAUSE]

00:28:37.560 --> 00:28:40.350
At Zeit, we have a
very simple mission.

00:28:40.350 --> 00:28:42.210
We want to empower
developers like you

00:28:42.210 --> 00:28:47.880
to build, deploy, and scale the
best websites and applications.

00:28:47.880 --> 00:28:50.850
About three years ago, we
identified an opportunity

00:28:50.850 --> 00:28:54.990
to foster this mission
in the React space.

00:28:54.990 --> 00:28:58.410
We identify that creating a
React website or application

00:28:58.410 --> 00:28:59.940
was very tedious.

00:28:59.940 --> 00:29:02.790
It required bringing all these
different components together,

00:29:02.790 --> 00:29:05.730
every time, for
every single project.

00:29:05.730 --> 00:29:07.620
But we had a very unique idea.

00:29:07.620 --> 00:29:10.920
What if it just took one command
to start developing a React

00:29:10.920 --> 00:29:14.280
app, one command to build
it, and your interface

00:29:14.280 --> 00:29:19.140
to the project was a very
simple file-system-based API,

00:29:19.140 --> 00:29:21.120
where you just create
a folder and put

00:29:21.120 --> 00:29:23.670
a bunch of React components
in there, and get everything

00:29:23.670 --> 00:29:25.730
figured out for you.

00:29:25.730 --> 00:29:28.290
And I'm happy to report that
that same idea we had three

00:29:28.290 --> 00:29:31.420
years ago is still true today.

00:29:31.420 --> 00:29:34.850
So we kept that simplicity
with a remarkable attention

00:29:34.850 --> 00:29:37.760
to backwards compatibility.

00:29:37.760 --> 00:29:41.120
This project, Next.js, has
always been about that.

00:29:41.120 --> 00:29:44.540
We wanted to capture the
spectrum of complexity

00:29:44.540 --> 00:29:46.850
and evolution of your projects.

00:29:46.850 --> 00:29:48.920
We thought that you
needed to have an easy way

00:29:48.920 --> 00:29:52.490
to start, but then an easy way
to evolve your project, that it

00:29:52.490 --> 00:29:54.360
should be good
for an individual,

00:29:54.360 --> 00:29:56.530
but it should also
be great for a team,

00:29:56.530 --> 00:29:58.280
and as well as capturing
the complexities

00:29:58.280 --> 00:30:01.120
and intricacies of React
rendering technologies,

00:30:01.120 --> 00:30:03.290
like going from
static site generation

00:30:03.290 --> 00:30:06.680
to advanced server rendering.

00:30:06.680 --> 00:30:10.580
We've done this so well
that every time you

00:30:10.580 --> 00:30:12.570
go onto your favorite
websites today,

00:30:12.570 --> 00:30:15.200
you're probably interfacing
with Next.js, sometimes

00:30:15.200 --> 00:30:17.760
in a small way,
sometimes in a big way.

00:30:17.760 --> 00:30:22.250
We have customers that
span from media, to SaaS,

00:30:22.250 --> 00:30:27.170
to maybe your favorite streaming
service for music or video.

00:30:27.170 --> 00:30:30.050
If it's a static app, or if
it's something very complex,

00:30:30.050 --> 00:30:33.950
Next.js has found its place in a
variety of different industries

00:30:33.950 --> 00:30:36.560
and use cases.

00:30:36.560 --> 00:30:38.060
And this has been
possible, as Anil

00:30:38.060 --> 00:30:40.640
was saying, because we took
this approach, which is

00:30:40.640 --> 00:30:42.800
the approach of the open web.

00:30:42.800 --> 00:30:44.420
We have an internal
team that has

00:30:44.420 --> 00:30:47.660
seen a lot of amazing
stewards of this project

00:30:47.660 --> 00:30:50.510
propel Next.js
forward, but we've also

00:30:50.510 --> 00:30:52.850
included hundreds
of contributors

00:30:52.850 --> 00:30:56.540
from the open source community,
and incredible partners,

00:30:56.540 --> 00:31:00.410
companies like GoDaddy and Hulu,
that bet massively on Next.js,

00:31:00.410 --> 00:31:02.750
but then also
decided to give back.

00:31:02.750 --> 00:31:05.210
If you're curious about how
they're using our framework,

00:31:05.210 --> 00:31:10.120
I encourage you to check out the
Hulu case study on our website.

00:31:10.120 --> 00:31:13.440
But my favorite partner is
a very special and prolific

00:31:13.440 --> 00:31:14.290
partner.

00:31:14.290 --> 00:31:16.410
They're very, very
productive people.

00:31:16.410 --> 00:31:18.090
So Google Chrome
reached out to us

00:31:18.090 --> 00:31:19.980
earlier this year
with an intention

00:31:19.980 --> 00:31:21.820
to make the web better.

00:31:21.820 --> 00:31:26.580
And they shared our key view
that great developer experience

00:31:26.580 --> 00:31:29.430
has to marry great performance.

00:31:29.430 --> 00:31:31.050
And they know this
better than anyone

00:31:31.050 --> 00:31:33.240
because they built
the Web Inspector.

00:31:33.240 --> 00:31:35.640
But it's very, very
important, just like Next.js

00:31:35.640 --> 00:31:39.240
goes from small to big,
it has to be easy to use,

00:31:39.240 --> 00:31:42.610
and it has to be very
fast for the end user.

00:31:42.610 --> 00:31:44.550
So we've been
really busy working

00:31:44.550 --> 00:31:48.450
on a different set of features
for improving Next.js.

00:31:48.450 --> 00:31:51.090
Some of them have to do
with developer experience,

00:31:51.090 --> 00:31:55.170
like an easier way to import
CSS into your React project.

00:31:55.170 --> 00:31:58.110
Some of them have to do with
staying close to the cutting

00:31:58.110 --> 00:32:01.290
edge of their latest and
greatest React features,

00:32:01.290 --> 00:32:04.560
like adding support for
Concurrent and Strict mode.

00:32:04.560 --> 00:32:08.010
And some of them have to do
with just bundling and compiling

00:32:08.010 --> 00:32:09.720
your projects better.

00:32:09.720 --> 00:32:11.872
So I'm really excited
about these changes,

00:32:11.872 --> 00:32:13.330
in particular
because earlier I was

00:32:13.330 --> 00:32:17.980
talking about great support
for backwards compatibility.

00:32:17.980 --> 00:32:21.030
So some of the changes the
Google Chrome team has helped

00:32:21.030 --> 00:32:25.290
us land, such as
improved web bundling,

00:32:25.290 --> 00:32:28.510
have helped people
in the real world.

00:32:28.510 --> 00:32:31.260
So one of our favorite
customers, Barnebys,

00:32:31.260 --> 00:32:33.390
they run an incredible
search engine

00:32:33.390 --> 00:32:35.160
for arts and collectibles.

00:32:35.160 --> 00:32:38.010
And being in the
e-commerce space,

00:32:38.010 --> 00:32:40.620
performance is of the essence.

00:32:40.620 --> 00:32:42.120
After they upgraded Next.js--

00:32:42.120 --> 00:32:44.550
with zero code changes,
thanks to the contributions

00:32:44.550 --> 00:32:45.780
that Chrome made--

00:32:45.780 --> 00:32:51.450
they saw nearly 25%
to 30% improvement

00:32:51.450 --> 00:32:54.000
in size of the bundles
of the main application.

00:32:54.000 --> 00:32:57.060
But that also translated into
just a snappier and smoother

00:32:57.060 --> 00:33:00.720
experience that helped everyone
that visited their website.

00:33:00.720 --> 00:33:03.960
This is possible thanks for
those amazing contributions.

00:33:03.960 --> 00:33:06.810
If you want to learn more
about what specifically went

00:33:06.810 --> 00:33:09.990
into making these improvements,
please check out our session

00:33:09.990 --> 00:33:15.420
tomorrow at around 11:00 AM,
led by Hussein and Tim Neutkens,

00:33:15.420 --> 00:33:18.990
who are going to talk about
all the internals of what

00:33:18.990 --> 00:33:22.140
went into making and
landing these improvements.

00:33:22.140 --> 00:33:25.230
Finally, if you're interested
about Next.js and want to check

00:33:25.230 --> 00:33:29.300
it out, please go
to nextjs.org/learn,

00:33:29.300 --> 00:33:31.800
where a five-minute tutorial
will just guide you through all

00:33:31.800 --> 00:33:32.663
the essentials.

00:33:32.663 --> 00:33:34.830
And you'll be productive
building React applications

00:33:34.830 --> 00:33:35.760
in no time.

00:33:35.760 --> 00:33:36.820
Thank you.

00:33:36.820 --> 00:33:38.237
DION ALMAER: Thank
you, Guillermo.

00:33:38.237 --> 00:33:39.420
[APPLAUSE]

00:33:41.150 --> 00:33:42.980
That's awesome.

00:33:42.980 --> 00:33:45.020
So we want to support
as many ecosystem

00:33:45.020 --> 00:33:48.180
players to unlock
performance wins by default,

00:33:48.180 --> 00:33:49.700
and so much more.

00:33:49.700 --> 00:33:52.460
We announced the Framework Fund
at the last Chrome Dev Summit.

00:33:52.460 --> 00:33:54.320
We've been really
excited to see the impact

00:33:54.320 --> 00:33:56.540
that these projects are
having, and we're really

00:33:56.540 --> 00:33:59.413
keen to fund more.

00:33:59.413 --> 00:34:01.580
Now you live in content
creation and app development

00:34:01.580 --> 00:34:03.425
tools all day.

00:34:03.425 --> 00:34:05.300
And the breadth of the
tools that the web has

00:34:05.300 --> 00:34:08.570
are pretty phenomenal, from no
code, to low code, to pro code,

00:34:08.570 --> 00:34:09.889
whatever those mean.

00:34:09.889 --> 00:34:13.580
And of course, for Anil, Vim.

00:34:13.580 --> 00:34:15.854
Yes, and Emacs-- anyway,
we're not going to go there.

00:34:15.854 --> 00:34:17.159
[CHUCKLING]

00:34:17.159 --> 00:34:19.610
We want these tools to thrive,
and for them to get access

00:34:19.610 --> 00:34:23.090
to everything they need from
the web platform and our data

00:34:23.090 --> 00:34:25.110
and insight tools.

00:34:25.110 --> 00:34:28.199
We also want to ensure that
our tools are doing everything

00:34:28.199 --> 00:34:30.690
they can to help you.

00:34:30.690 --> 00:34:32.670
First, the metrics
that I mentioned

00:34:32.670 --> 00:34:35.320
will now be reflected
across our tools,

00:34:35.320 --> 00:34:38.699
including Lighthouse
and Chrome DevTools.

00:34:41.739 --> 00:34:43.770
And to help you
understand these metrics,

00:34:43.770 --> 00:34:47.400
we're adding clear guidance on
web.dev, our primary developer

00:34:47.400 --> 00:34:49.755
website, which expanded
today with great content.

00:34:52.630 --> 00:34:55.150
Now in Lighthouse, we recently
announced our very first

00:34:55.150 --> 00:34:55.780
stack pack.

00:34:55.780 --> 00:34:58.000
This one was for
WordPress, and allowed

00:34:58.000 --> 00:35:00.940
us to extend the general
guidance to include

00:35:00.940 --> 00:35:04.310
actionable WordPress advice.

00:35:04.310 --> 00:35:06.220
Today we're releasing
a stack pack

00:35:06.220 --> 00:35:09.130
for the open-source
e-commerce platform Magento,

00:35:09.130 --> 00:35:10.720
as well as expanding
our coverage

00:35:10.720 --> 00:35:13.780
to include packs for web
frameworks such as Angular,

00:35:13.780 --> 00:35:17.412
React, and AMP.

00:35:17.412 --> 00:35:18.870
Now, content
platforms are actually

00:35:18.870 --> 00:35:21.010
powering more than
half of the web.

00:35:21.010 --> 00:35:22.680
And we've been
working really closely

00:35:22.680 --> 00:35:27.180
with dozens of them, in some
areas, investing deeply.

00:35:27.180 --> 00:35:29.920
At WordCamp US,
just two weeks ago,

00:35:29.920 --> 00:35:33.300
we announced the 1.0 release
of Site Kit for WordPress,

00:35:33.300 --> 00:35:34.980
which helps content
creators by making

00:35:34.980 --> 00:35:39.090
it easy to set up and access
multiple Google tools directly

00:35:39.090 --> 00:35:40.665
in WordPress.

00:35:40.665 --> 00:35:43.040
Now, we've also been working
with the WordPress community

00:35:43.040 --> 00:35:46.020
to improve site health and
performance by simplifying

00:35:46.020 --> 00:35:50.180
HTTPS migrations,
prototyping image lazy load,

00:35:50.180 --> 00:35:52.070
using font display
swap to accelerate

00:35:52.070 --> 00:35:56.180
text rendering, and much more.

00:35:56.180 --> 00:35:58.252
And then there's Shopify.

00:35:58.252 --> 00:36:00.460
We've been really impressed
with the performance work

00:36:00.460 --> 00:36:03.400
that they've been shipping
for all of their merchandise.

00:36:03.400 --> 00:36:05.080
One example of
impact at scale is

00:36:05.080 --> 00:36:08.200
how they rolled out WebP
support across their platform,

00:36:08.200 --> 00:36:12.190
and saw a 60% decrease
in bytes served.

00:36:12.190 --> 00:36:15.850
In one extreme case, they
saw savings of over 210 megs

00:36:15.850 --> 00:36:18.550
on a single page, which
made me wonder, what

00:36:18.550 --> 00:36:20.811
are the z-indexes on that page?

00:36:20.811 --> 00:36:22.284
[CHUCKLING]

00:36:23.760 --> 00:36:25.920
So we're super excited
to see our tools become

00:36:25.920 --> 00:36:29.643
more powerful, integrated,
and open to the ecosystem.

00:36:29.643 --> 00:36:31.560
In fact, let me stop
talking for a little bit,

00:36:31.560 --> 00:36:33.660
and instead please
join me in welcoming

00:36:33.660 --> 00:36:36.330
Elizabeth and Paul to show
some of the new features we've

00:36:36.330 --> 00:36:38.400
landed across our
tools, and highlight

00:36:38.400 --> 00:36:41.790
how you can use them together
to make web development easier

00:36:41.790 --> 00:36:42.581
thank you.

00:36:42.581 --> 00:36:46.018
[MUSIC PLAYING, APPLAUSE]

00:36:50.688 --> 00:36:52.480
ELIZABETH SWEENY: Thank
you Caps Lock Dion.

00:36:52.480 --> 00:36:53.680
I am Elizabeth.

00:36:53.680 --> 00:36:54.555
PAUL IRISH: I'm Paul.

00:36:54.555 --> 00:36:56.013
ELIZABETH SWEENY:
And we are really

00:36:56.013 --> 00:36:58.070
excited to work for
Chrome Web Platform team,

00:36:58.070 --> 00:36:59.760
and be with you here today.

00:36:59.760 --> 00:37:01.937
So we've been working
really hard to make sure

00:37:01.937 --> 00:37:03.770
that you have a really
consistent experience

00:37:03.770 --> 00:37:05.480
across all of our tools.

00:37:05.480 --> 00:37:08.990
And we wanted to take a moment
to walk through from diagnosis

00:37:08.990 --> 00:37:12.890
to an actual solution, what
that fix workflow looks

00:37:12.890 --> 00:37:14.460
like for performance.

00:37:14.460 --> 00:37:17.480
So we also want to
practice what we preach,

00:37:17.480 --> 00:37:19.850
so we're going to be
using one of our own sites

00:37:19.850 --> 00:37:23.107
to try to optimize it,
web.dev, for this demo.

00:37:23.107 --> 00:37:24.440
All right, Paul, you good to go?

00:37:24.440 --> 00:37:25.200
PAUL IRISH:
[EXHALING DRAMATICALLY]

00:37:25.200 --> 00:37:25.783
Let's do this.

00:37:25.783 --> 00:37:27.477
ELIZABETH SWEENY: OK, awesome.

00:37:27.477 --> 00:37:29.060
So the first thing
Paul is going to do

00:37:29.060 --> 00:37:31.130
is jump into the Audit
panel in DevTools,

00:37:31.130 --> 00:37:34.250
where you can run a
Lighthouse report locally

00:37:34.250 --> 00:37:35.480
on your own machine.

00:37:35.480 --> 00:37:39.490
So he's just going to run the
performance category for now,

00:37:39.490 --> 00:37:39.990
right?

00:37:39.990 --> 00:37:40.770
PAUL IRISH: Just performance.

00:37:40.770 --> 00:37:42.230
ELIZABETH SWEENY: OK, cool.

00:37:42.230 --> 00:37:45.810
So it should just
be a few seconds.

00:37:45.810 --> 00:37:47.860
And I was told to dance
here, but none of you

00:37:47.860 --> 00:37:49.860
want to see me dancing.

00:37:49.860 --> 00:37:51.520
This is all pad.

00:37:51.520 --> 00:37:54.040
OK, all right, cool.

00:37:54.040 --> 00:37:55.780
So the performance score is OK.

00:37:55.780 --> 00:37:59.660
But we chose a page that
we know we can improve.

00:37:59.660 --> 00:38:02.200
So let's see, there seemed
to be a few images that

00:38:02.200 --> 00:38:03.400
are a little bigger.

00:38:03.400 --> 00:38:04.390
PAUL IRISH: Yeah, OK.

00:38:04.390 --> 00:38:07.840
Yeah, a few images here,
they're just oversized.

00:38:07.840 --> 00:38:08.340
Let's--

00:38:08.340 --> 00:38:10.215
ELIZABETH SWEENY: Do
you want to tackle them?

00:38:10.215 --> 00:38:12.580
PAUL IRISH: Let's just focus
on spa kittens, I guess?

00:38:12.580 --> 00:38:14.288
ELIZABETH SWEENY:
Definitely spa kittens.

00:38:14.288 --> 00:38:17.800
PAUL IRISH: Yeah, it
looks like it's 79K.

00:38:17.800 --> 00:38:20.980
And it could be quite
a lot much smaller.

00:38:20.980 --> 00:38:22.200
OK, that's spa kittens.

00:38:22.200 --> 00:38:22.700
Good, yeah.

00:38:22.700 --> 00:38:25.280
All right, let's
go check it out.

00:38:25.280 --> 00:38:26.270
So it's down here.

00:38:26.270 --> 00:38:28.270
Good, yes.

00:38:28.270 --> 00:38:29.200
Image tag.

00:38:29.200 --> 00:38:31.300
Ah, OK, yeah.

00:38:31.300 --> 00:38:36.040
1800 pixels wide image,
but shown at just 527 wide.

00:38:36.040 --> 00:38:39.200
So, way oversized.

00:38:39.200 --> 00:38:41.150
OK, we could fix this.

00:38:41.150 --> 00:38:45.180
And so I think probably the
fix that we're going to do,

00:38:45.180 --> 00:38:48.130
we'll just use responsive
images, source set

00:38:48.130 --> 00:38:49.705
kind of thing.

00:38:49.705 --> 00:38:50.830
And I cheated a little bit.

00:38:50.830 --> 00:38:53.455
I do know that there's already
a responsive image on this page.

00:38:53.455 --> 00:38:55.310
So we're going to
just make use of that.

00:38:55.310 --> 00:38:58.090
So what I'm going to do is I'm
going to take just the file

00:38:58.090 --> 00:39:00.352
name of spa kittens.

00:39:00.352 --> 00:39:02.310
And then we're going to
go find this other one.

00:39:02.310 --> 00:39:05.980
OK, here you can see
like the full source set.

00:39:05.980 --> 00:39:08.860
And we're just going
to edit this attribute,

00:39:08.860 --> 00:39:11.170
and just replace this.

00:39:11.170 --> 00:39:15.190
Command-D, Paste, boom.

00:39:15.190 --> 00:39:17.470
OK, yeah, there we go.

00:39:17.470 --> 00:39:21.370
All right, now we're going
to take the HTML of this,

00:39:21.370 --> 00:39:26.350
and we're going to go
and copy it over into--

00:39:26.350 --> 00:39:29.560
use my favorite feature in
DevTools, Local Overrides.

00:39:29.560 --> 00:39:32.920
All right, so now we're
going to go down and find

00:39:32.920 --> 00:39:36.850
the original spa
kittens image tag.

00:39:36.850 --> 00:39:40.810
And we'll just delete that,
and then paste in the new one.

00:39:40.810 --> 00:39:45.280
And then hit Control-S.
And then we should refresh.

00:39:45.280 --> 00:39:50.910
And let's just verify that that
actually applied to the page.

00:39:50.910 --> 00:39:52.140
Yes, OK, good, yeah.

00:39:52.140 --> 00:39:53.640
ELIZABETH SWEENY:
So can we actually

00:39:53.640 --> 00:39:55.470
rerun Lighthouse to see
if it fixed it though?

00:39:55.470 --> 00:39:56.220
PAUL IRISH: Yeah, sure.

00:39:56.220 --> 00:39:56.820
Yeah, OK.

00:39:56.820 --> 00:39:59.580
So let's take a
look at Lighthouse.

00:39:59.580 --> 00:40:01.305
We'll go back up and rerun.

00:40:05.038 --> 00:40:07.080
ELIZABETH SWEENY: All
right, come on spa kittens.

00:40:07.080 --> 00:40:10.160
PAUL IRISH: Hey Elizabeth, how
do you get a tissue to dance?

00:40:10.160 --> 00:40:12.260
But a little boogie in it.

00:40:12.260 --> 00:40:13.824
[CHUCKLING]

00:40:13.824 --> 00:40:16.324
ELIZABETH SWEENY: The sad part
is that I knew the punchline.

00:40:16.324 --> 00:40:21.863
PAUL IRISH: [CHUCKLES] OK.

00:40:21.863 --> 00:40:23.280
ELIZABETH SWEENY:
All right, cool.

00:40:23.280 --> 00:40:25.430
PAUL IRISH: Ooh, much better.

00:40:25.430 --> 00:40:26.640
ELIZABETH SWEENY: Amazing.

00:40:26.640 --> 00:40:27.350
So, OK.

00:40:27.350 --> 00:40:28.140
PAUL IRISH: And
then check it out.

00:40:28.140 --> 00:40:29.330
ELIZABETH SWEENY: Thank you.

00:40:29.330 --> 00:40:29.920
All right.

00:40:29.920 --> 00:40:31.200
PAUL IRISH: It's not
even there anymore.

00:40:31.200 --> 00:40:32.575
ELIZABETH SWEENY:
It's not there.

00:40:32.575 --> 00:40:33.705
So I know you pretty well.

00:40:33.705 --> 00:40:35.330
And I'm going to
guess that you already

00:40:35.330 --> 00:40:38.010
have a PR ready to go
that'll fix this in source.

00:40:38.010 --> 00:40:39.530
Am I right?

00:40:39.530 --> 00:40:40.725
PAUL IRISH: Yes.

00:40:40.725 --> 00:40:41.850
ELIZABETH SWEENY: Fabulous.

00:40:41.850 --> 00:40:43.040
PAUL IRISH: I got a PR.

00:40:43.040 --> 00:40:44.930
Let's see.

00:40:44.930 --> 00:40:46.090
Let's switch over.

00:40:46.090 --> 00:40:48.170
Yep, yep, PR for web.dev.

00:40:48.170 --> 00:40:49.430
Just start it out.

00:40:49.430 --> 00:40:50.380
ELIZABETH SWEENY:
Yeah you're so good.

00:40:50.380 --> 00:40:53.005
OK, so we want to make sure that
we validate that the change is

00:40:53.005 --> 00:40:55.340
actually good, though, and
convince the entire team

00:40:55.340 --> 00:40:59.090
that this is actually going
to be a sustainable fix.

00:40:59.090 --> 00:41:01.520
So with that, we
want to take a moment

00:41:01.520 --> 00:41:03.740
to introduce Lighthouse CI.

00:41:03.740 --> 00:41:07.400
It runs Lighthouse automatically
on every single commit.

00:41:07.400 --> 00:41:10.112
And we're super-jazzed about it.

00:41:10.112 --> 00:41:11.070
PAUL IRISH: Yeah, yeah.

00:41:11.070 --> 00:41:12.880
This is rad stuff.

00:41:12.880 --> 00:41:13.748
All right, so--

00:41:13.748 --> 00:41:16.040
ELIZABETH SWEENY: And we've
already added Lighthouse CI

00:41:16.040 --> 00:41:17.600
to the GitHub repo, right?

00:41:17.600 --> 00:41:18.410
PAUL IRISH: Yeah.

00:41:18.410 --> 00:41:19.370
So let me show that.

00:41:19.370 --> 00:41:21.530
So if we just
scroll down, we can

00:41:21.530 --> 00:41:23.741
see we have the integration
right there in the pull

00:41:23.741 --> 00:41:23.840
request.

00:41:23.840 --> 00:41:24.923
ELIZABETH SWEENY: Awesome.

00:41:24.923 --> 00:41:28.760
And this allows us to do a few
cool new things, one of which

00:41:28.760 --> 00:41:31.700
is actually being able
to see an overview.

00:41:31.700 --> 00:41:33.890
So you can see the performance
of all of your pages

00:41:33.890 --> 00:41:36.260
over time for all the
report categories.

00:41:36.260 --> 00:41:38.030
This is an automated
collection of all

00:41:38.030 --> 00:41:41.078
of your Lighthouse report
categories on every commit.

00:41:41.078 --> 00:41:42.620
That's including
the state of audits,

00:41:42.620 --> 00:41:46.575
as well as the values of
your performance metrics.

00:41:46.575 --> 00:41:48.200
So one of the main
things we want to do

00:41:48.200 --> 00:41:51.410
is actually compare the quality
of our PR against master to see

00:41:51.410 --> 00:41:53.810
if we've done anything
that causes regressions

00:41:53.810 --> 00:41:55.310
before the change
actually goes live

00:41:55.310 --> 00:41:57.360
and users have to deal with it.

00:41:57.360 --> 00:41:59.848
So there has to be a better
way to do it, though--

00:41:59.848 --> 00:42:01.640
PAUL IRISH: --than
toggling back and forth.

00:42:01.640 --> 00:42:03.620
ELIZABETH SWEENY: Than just
toggling between two reports,

00:42:03.620 --> 00:42:03.890
right?

00:42:03.890 --> 00:42:04.130
PAUL IRISH: Yeah.

00:42:04.130 --> 00:42:06.830
So we've focused a lot on
this kind of experience, what

00:42:06.830 --> 00:42:08.420
actually made a change here.

00:42:08.420 --> 00:42:10.860
And so let me show you
kind of how that works.

00:42:10.860 --> 00:42:13.580
So if we actually just go
back to that pull request,

00:42:13.580 --> 00:42:18.000
and we click through
on the status check,

00:42:18.000 --> 00:42:22.450
so this is the new diff
view for Lighthouse CI.

00:42:22.450 --> 00:42:24.200
Let's bump this up.

00:42:24.200 --> 00:42:27.650
So we see the 3-point difference
in the performance score.

00:42:27.650 --> 00:42:30.920
And we see all the changes
that happen to all the metrics.

00:42:30.920 --> 00:42:32.930
They're all going down,
which is an improvement.

00:42:32.930 --> 00:42:33.472
We like that.

00:42:33.472 --> 00:42:35.840
And let's go check out
properly-sized images.

00:42:35.840 --> 00:42:37.940
Looks like we have
a change there.

00:42:37.940 --> 00:42:38.960
Yeah, OK, cool.

00:42:38.960 --> 00:42:41.180
So yeah, I made
them all responsive.

00:42:41.180 --> 00:42:44.330
And so they're removed
from the report.

00:42:44.330 --> 00:42:46.670
The [INAUDIBLE]
savings is all gone.

00:42:46.670 --> 00:42:48.010
So we fixed it.

00:42:48.010 --> 00:42:49.850
And check this out--

00:42:49.850 --> 00:42:51.690
yeah, for all the
images on the page,

00:42:51.690 --> 00:42:55.190
we've reduced the total weight
of images by half a meg.

00:42:55.190 --> 00:42:57.745
So this is pretty cool.

00:42:57.745 --> 00:42:59.370
ELIZABETH SWEENY:
Yeah, that's amazing.

00:42:59.370 --> 00:43:02.750
So if you would like to learn
more about Lighthouse CI as

00:43:02.750 --> 00:43:04.250
well as other speed
tooling updates,

00:43:04.250 --> 00:43:05.750
please join us
later for our talk.

00:43:05.750 --> 00:43:07.540
But until then,
thank you very much.

00:43:07.540 --> 00:43:08.582
PAUL IRISH: Thanks, guys.

00:43:08.582 --> 00:43:10.892
[APPLAUSE]

00:43:13.820 --> 00:43:15.570
DION ALMAER: Super
excited about the tool.

00:43:15.570 --> 00:43:18.030
The Lighthouse score, not so
excited about, by the way.

00:43:20.830 --> 00:43:21.425
So, thanks.

00:43:21.425 --> 00:43:22.800
I'm so excited to
learn how we're

00:43:22.800 --> 00:43:25.530
working to improve the web
and make you successful,

00:43:25.530 --> 00:43:29.340
no matter what framework
you use, what CMS you use.

00:43:29.340 --> 00:43:32.610
What I really hope is that
you set bold quality goals,

00:43:32.610 --> 00:43:34.590
and use our tools and
services to understand

00:43:34.590 --> 00:43:36.720
the experience your
users are getting,

00:43:36.720 --> 00:43:39.840
and then create the high-quality
experiences that we all

00:43:39.840 --> 00:43:43.630
want to see as a link
on our worldwide web.

00:43:43.630 --> 00:43:46.150
Now, finally, I do
have one something

00:43:46.150 --> 00:43:48.250
I'm a little bit
embarrassed to admit.

00:43:48.250 --> 00:43:50.620
And that's see, you see
these Chrome Dev Summit URLs?

00:43:50.620 --> 00:43:51.370
I'm really angry.

00:43:51.370 --> 00:43:53.110
They don't actually work.

00:43:53.110 --> 00:43:55.450
Like, you put them in the
browser, and they don't work.

00:43:55.450 --> 00:43:58.810
But to be clear,
Chrome loves URLs.

00:43:58.810 --> 00:44:00.813
I want to make that very clear.

00:44:00.813 --> 00:44:02.230
And to tell you
more about Chrome,

00:44:02.230 --> 00:44:04.827
please welcome Parisa
from the browser team.

00:44:04.827 --> 00:44:08.306
[MUSIC PLAYING, APPLAUSE]

00:44:12.790 --> 00:44:15.520
PARISA TABRIZ: Thank
you, Caps Lock Dion.

00:44:15.520 --> 00:44:17.980
Cheerio, chap.

00:44:17.980 --> 00:44:21.010
He's going to tell me how far
or close Sam to "Downton Abbey"

00:44:21.010 --> 00:44:22.330
afterwards.

00:44:22.330 --> 00:44:24.290
Hello, everyone.

00:44:24.290 --> 00:44:27.100
Hope you're enjoying Dev Summit.

00:44:27.100 --> 00:44:31.300
As Anil mentioned, when we think
about the future of the web,

00:44:31.300 --> 00:44:35.020
we're considering 4
and 1/2 billion users.

00:44:35.020 --> 00:44:37.405
And this isn't just users
who are coming online

00:44:37.405 --> 00:44:39.030
for the first time
in emerging markets,

00:44:39.030 --> 00:44:43.870
it's also young users who are
primarily using their phones.

00:44:43.870 --> 00:44:46.510
Now, in Chrome,
we really, really

00:44:46.510 --> 00:44:49.420
believe that every existing
user and future user

00:44:49.420 --> 00:44:51.380
deserves an amazing experience.

00:44:51.380 --> 00:44:53.860
And so I want to share
just a couple of the ways

00:44:53.860 --> 00:44:57.830
that we're trying to
deliver on that experience.

00:44:57.830 --> 00:45:01.980
A lot of our focus has been
around three key goals--

00:45:01.980 --> 00:45:04.110
how do we make the
web perform better,

00:45:04.110 --> 00:45:06.110
how do we make the
web more accessible,

00:45:06.110 --> 00:45:09.660
and how do we make the web
more safe and trustworthy.

00:45:09.660 --> 00:45:11.690
So let's talk about
performance first.

00:45:11.690 --> 00:45:14.870
Now, we believe that the web
is for everyone, no matter what

00:45:14.870 --> 00:45:17.990
your device, what
your internet speed,

00:45:17.990 --> 00:45:20.070
or what your purchasing power.

00:45:20.070 --> 00:45:22.130
And that's why we
invest in performance

00:45:22.130 --> 00:45:25.415
with consideration for just
a huge range of devices.

00:45:28.160 --> 00:45:35.470
OK, when it comes to RAM, we
have senior memes, all of them.

00:45:35.470 --> 00:45:39.070
And we laugh with
you, but we also

00:45:39.070 --> 00:45:41.770
work hard to not give
you as much fodder.

00:45:41.770 --> 00:45:44.440
And for memory, it's a
really delicate balance.

00:45:44.440 --> 00:45:47.500
Because sometimes when
you use more memory,

00:45:47.500 --> 00:45:51.670
it actually can lead to a faster
user experience via caching.

00:45:51.670 --> 00:45:54.220
And it also makes possible
additional security

00:45:54.220 --> 00:45:54.940
mitigations.

00:45:54.940 --> 00:45:58.090
But we obviously know,
if you use too much,

00:45:58.090 --> 00:46:00.550
it can actually impact
the user experience.

00:46:00.550 --> 00:46:04.330
We have lots of people
dedicated to figuring out just

00:46:04.330 --> 00:46:07.030
what is the optimal
usage for Chrome

00:46:07.030 --> 00:46:10.600
given a user's available
CPU and memory resources.

00:46:10.600 --> 00:46:12.855
And we've been investing
more here lately.

00:46:12.855 --> 00:46:14.230
One of the things
that we've done

00:46:14.230 --> 00:46:16.270
is developed
automated tooling so

00:46:16.270 --> 00:46:20.860
that we can find memory
leaks or UI jank in the wild,

00:46:20.860 --> 00:46:23.620
and get engineers enough
information so they actually

00:46:23.620 --> 00:46:26.720
can debug and fix those issues.

00:46:26.720 --> 00:46:31.660
And after a lot of work and
via the help of this tooling,

00:46:31.660 --> 00:46:33.500
we've made a couple
of achievements

00:46:33.500 --> 00:46:34.900
that we're pretty proud of.

00:46:34.900 --> 00:46:37.540
So what we've seen
in the past year

00:46:37.540 --> 00:46:41.050
is an 8x reduction in UI
thread jank in the main browser

00:46:41.050 --> 00:46:42.310
process.

00:46:42.310 --> 00:46:46.540
And we've also seen a 15% CPU
reduction and 50% reduction

00:46:46.540 --> 00:46:50.820
in physical memory for
background tabs in the browser.

00:46:50.820 --> 00:46:53.257
Now, that's pretty good.

00:46:53.257 --> 00:46:55.999
[APPLAUSE]

00:46:57.830 --> 00:46:59.640
Thank you.

00:46:59.640 --> 00:47:02.060
We're proud of this
work, but we totally

00:47:02.060 --> 00:47:03.510
know it's an ongoing effort.

00:47:03.510 --> 00:47:06.350
And this is something we're
going to continue to invest in.

00:47:06.350 --> 00:47:07.700
So that's the browser.

00:47:07.700 --> 00:47:10.370
When it comes to V8,
we've also made a number

00:47:10.370 --> 00:47:12.350
of memory reductions here.

00:47:12.350 --> 00:47:16.100
For example, we reduced
render in the memory footprint

00:47:16.100 --> 00:47:17.570
by about 5%.

00:47:17.570 --> 00:47:21.440
And we actually expect
further reduction of about 12%

00:47:21.440 --> 00:47:24.230
via V8 pointer compression,
which is literally rolling out

00:47:24.230 --> 00:47:25.550
right now.

00:47:25.550 --> 00:47:26.900
So more cool improvements.

00:47:26.900 --> 00:47:30.300
But people want
to see to believe.

00:47:30.300 --> 00:47:34.280
And so you can see
from this video--

00:47:34.280 --> 00:47:36.870
within V8, we've massively
reduced parsing time.

00:47:36.870 --> 00:47:39.360
And so now Google
Sheets loads way faster.

00:47:39.360 --> 00:47:42.770
This is a comparison of Chrome
today versus Chrome a year ago.

00:47:42.770 --> 00:47:47.670
And again, if you're into
stats, this is about 33% faster.

00:47:47.670 --> 00:47:51.330
So thanks to V8.

00:47:51.330 --> 00:47:53.730
And at I/O this year,
we announced a couple

00:47:53.730 --> 00:47:56.905
of improvements that
developers just get by default.

00:47:56.905 --> 00:47:58.780
And I wanted to just
give an update on those.

00:47:58.780 --> 00:48:01.590
So the first one that
we're excited to share

00:48:01.590 --> 00:48:03.870
relates to image lazy load.

00:48:03.870 --> 00:48:05.880
And this is now
going to be enabled

00:48:05.880 --> 00:48:09.420
by default for all
Chrome light mode users.

00:48:09.420 --> 00:48:12.120
Now, lazy load is
when the browser

00:48:12.120 --> 00:48:16.470
prioritizes loading images or
IFrames in the current view.

00:48:16.470 --> 00:48:18.390
And so it'll actually
defer loading elements

00:48:18.390 --> 00:48:21.708
outside of the view until
the user scrolls to it.

00:48:21.708 --> 00:48:23.250
This means that all
Chrome light mode

00:48:23.250 --> 00:48:26.340
users are going to get
even more data savings,

00:48:26.340 --> 00:48:28.290
and they're going to
get even faster content

00:48:28.290 --> 00:48:29.500
in view experience.

00:48:29.500 --> 00:48:33.540
And so that's great for
default users in light mode.

00:48:33.540 --> 00:48:35.070
Developers can also
just enable this

00:48:35.070 --> 00:48:38.600
by adding one line of text.

00:48:38.600 --> 00:48:41.000
And then second
update, and something

00:48:41.000 --> 00:48:45.710
that's coming in a couple months
is launching Paint Holding.

00:48:45.710 --> 00:48:47.570
Now, Paint Holding
is where the browser

00:48:47.570 --> 00:48:50.690
will wait very, very briefly
before starting to paint.

00:48:50.690 --> 00:48:53.630
So the page renders
as a whole rather than

00:48:53.630 --> 00:48:55.670
jumping different
elements around.

00:48:55.670 --> 00:48:58.490
And it just avoids kind of
what is a distracting kind

00:48:58.490 --> 00:48:59.690
of white splash.

00:48:59.690 --> 00:49:02.870
And so again, just by default,
giving users a better, more

00:49:02.870 --> 00:49:03.950
smooth experience.

00:49:07.420 --> 00:49:12.070
So performance is one big
area of ongoing investment.

00:49:12.070 --> 00:49:15.320
But access to the web isn't
just about performance.

00:49:15.320 --> 00:49:19.510
It's also about making
content accessible.

00:49:19.510 --> 00:49:23.380
For example, users who
are blind or low vision

00:49:23.380 --> 00:49:27.320
are often using a screen
reader or Braille display.

00:49:27.320 --> 00:49:31.360
And unfortunately, these
users will typically hear,

00:49:31.360 --> 00:49:37.030
"image," "unlabeled graphic,"
or a long, irrelevant filename

00:49:37.030 --> 00:49:40.870
read aloud whenever they're on a
page that has unlabeled images.

00:49:40.870 --> 00:49:43.500
And obviously this can be a
pretty frustrating experience.

00:49:43.500 --> 00:49:44.958
So this is something
that we wanted

00:49:44.958 --> 00:49:47.860
to help those users with.

00:49:47.860 --> 00:49:51.850
Now, we used Google AI
to automatically generate

00:49:51.850 --> 00:49:53.080
descriptions of images.

00:49:53.080 --> 00:49:56.380
So now if users turn on
the Get Image Descriptions

00:49:56.380 --> 00:49:58.050
from Google feature,
Chrome is going

00:49:58.050 --> 00:50:00.160
to automatically
generate descriptions

00:50:00.160 --> 00:50:01.480
of unlabeled images.

00:50:01.480 --> 00:50:04.870
And so just as an example, if
a user came on this image, then

00:50:04.870 --> 00:50:07.210
they might actually
hear, "appears

00:50:07.210 --> 00:50:10.620
to be fruits and
vegetables at a market."

00:50:10.620 --> 00:50:14.390
So as you all know, it
is still best practice

00:50:14.390 --> 00:50:17.660
for developers to actually add
their own Alt text to images.

00:50:17.660 --> 00:50:21.663
Because you know the context
of your content best.

00:50:21.663 --> 00:50:23.330
But this feature is
really just intended

00:50:23.330 --> 00:50:25.280
to help bridge some
of the existing gaps

00:50:25.280 --> 00:50:27.150
that we know are present
in the web today.

00:50:30.160 --> 00:50:32.680
And our team has set
a goal for ourselves

00:50:32.680 --> 00:50:34.660
to just really meet
the highest level

00:50:34.660 --> 00:50:36.310
of accessibility standards.

00:50:36.310 --> 00:50:39.880
And we've made a lot of
progress on this, and in general

00:50:39.880 --> 00:50:43.060
are just thrilled to see
users finding improvements

00:50:43.060 --> 00:50:44.913
helpful in Chrome.

00:50:44.913 --> 00:50:46.330
Just recently,
Chrome was actually

00:50:46.330 --> 00:50:49.630
named one of the most used
browsers among blind users.

00:50:49.630 --> 00:50:52.900
And this was according to a
survey by the Web Accessibility

00:50:52.900 --> 00:50:56.260
In Mind group, and something
that we're proud of, just

00:50:56.260 --> 00:51:00.670
given all the effort into
making Chrome more accessible.

00:51:00.670 --> 00:51:03.250
And also have a lot
more work to do here.

00:51:03.250 --> 00:51:05.200
But very much driven
by the mission

00:51:05.200 --> 00:51:08.890
to make sure that
we're building helpful

00:51:08.890 --> 00:51:12.070
features so that,
really, technology

00:51:12.070 --> 00:51:15.580
can empower everybody.

00:51:15.580 --> 00:51:18.840
Of course, in order to be
truly empowered by the web,

00:51:18.840 --> 00:51:21.180
it has to be safe
and trustworthy,

00:51:21.180 --> 00:51:23.153
not just for Chrome
users, but for everyone.

00:51:23.153 --> 00:51:25.320
And so I want to a little
bit about some of the ways

00:51:25.320 --> 00:51:26.987
that we've been
investing in doing that.

00:51:29.410 --> 00:51:32.590
Internet-wide safety
absolutely demands

00:51:32.590 --> 00:51:34.300
industry-wide collaboration.

00:51:34.300 --> 00:51:37.930
And together-- and really, I do
mean from people in the room,

00:51:37.930 --> 00:51:39.670
and people in the livestream--

00:51:39.670 --> 00:51:42.910
I'm proud to say that we've
made some huge progress on HTTPS

00:51:42.910 --> 00:51:44.230
adoption.

00:51:44.230 --> 00:51:49.660
Today, 90 of the top 100
sites now default to HTTPS,

00:51:49.660 --> 00:51:55.210
and that's up from only
about 25 back in 2016.

00:51:55.210 --> 00:51:58.510
From what we see, 90%
of all web traffic

00:51:58.510 --> 00:52:01.690
at Google across popular
operating systems,

00:52:01.690 --> 00:52:04.570
both desktop and mobile,
is now over HTTPS.

00:52:04.570 --> 00:52:06.770
And that's just a
huge accomplishment.

00:52:06.770 --> 00:52:07.670
So--

00:52:07.670 --> 00:52:11.100
[APPLAUSE]

00:52:13.550 --> 00:52:15.740
As a next step,
Chrome is investing

00:52:15.740 --> 00:52:18.200
in continuing to improve
the security of HTTPS.

00:52:18.200 --> 00:52:20.060
And we're going
to begin blocking

00:52:20.060 --> 00:52:24.863
all mixed content or insecure
HTTP content loaded on HTTPS

00:52:24.863 --> 00:52:28.370
pages by default. And since
we're asking developers

00:52:28.370 --> 00:52:33.045
to do some work as we always do,
we know this takes some time,

00:52:33.045 --> 00:52:35.420
and we're going to be rolling
this out over the next four

00:52:35.420 --> 00:52:36.110
milestones.

00:52:39.880 --> 00:52:42.040
We're also experimenting
with new ways

00:52:42.040 --> 00:52:44.150
to make DNS more secure.

00:52:44.150 --> 00:52:46.300
So as you know, DNS is
the addressing system

00:52:46.300 --> 00:52:48.460
of the internet, and just
a really essential piece

00:52:48.460 --> 00:52:50.275
of how the internet works.

00:52:50.275 --> 00:52:54.700
Unfortunately, it remains
one of the last non-encrypted

00:52:54.700 --> 00:52:55.570
channels.

00:52:55.570 --> 00:52:58.250
And this potentially
exposes users

00:52:58.250 --> 00:53:02.590
to privacy leaks, or phishing
attacks, or pharming attacks.

00:53:02.590 --> 00:53:05.350
And a lot of members
of the web community

00:53:05.350 --> 00:53:08.170
have tried to improve
this over time,

00:53:08.170 --> 00:53:11.890
but just nothing has really
taken off until more recently.

00:53:11.890 --> 00:53:14.440
Now the latest proposal
from the web community

00:53:14.440 --> 00:53:18.250
is called DNS over HTTPS.

00:53:18.250 --> 00:53:20.590
As a browser, this obviously
plays to our strengths.

00:53:20.590 --> 00:53:25.190
But DNS has been around
for 35-plus years.

00:53:25.190 --> 00:53:29.530
And so changing it is just
a really complex endeavor.

00:53:29.530 --> 00:53:32.440
And it's one that we are
being really deliberately

00:53:32.440 --> 00:53:33.880
conservative about.

00:53:33.880 --> 00:53:38.230
So we're only going to upgrade
Chrome users to DNS over HTTPS

00:53:38.230 --> 00:53:41.587
if we already know that their
DNS providers support it.

00:53:41.587 --> 00:53:43.420
And we think that this
is the right approach

00:53:43.420 --> 00:53:47.950
to balance user choice and
control while also delivering

00:53:47.950 --> 00:53:50.680
significant improvements that
we see for security and privacy.

00:53:54.410 --> 00:53:58.690
Now, if there's one topic that
takes over most of the browser

00:53:58.690 --> 00:54:01.180
safety and trust
conversationally lately,

00:54:01.180 --> 00:54:04.660
it's privacy, and in
particular cookies.

00:54:04.660 --> 00:54:07.323
So earlier this
year, at I/O, I've

00:54:07.323 --> 00:54:08.740
made some announcements
that we're

00:54:08.740 --> 00:54:12.610
committed to making controls for
third-party cookies just more

00:54:12.610 --> 00:54:14.140
usable and more visible.

00:54:14.140 --> 00:54:16.750
And we've already kicked
off some early experiments.

00:54:16.750 --> 00:54:18.910
You can check it
out in Incognito,

00:54:18.910 --> 00:54:22.300
which is our mode that we know
a lot of privacy-conscious users

00:54:22.300 --> 00:54:23.980
will turn to you.

00:54:23.980 --> 00:54:26.020
And in parallel,
we're continuing

00:54:26.020 --> 00:54:29.140
to just make progress on plans
to improve the existing cookie

00:54:29.140 --> 00:54:30.820
infrastructure.

00:54:30.820 --> 00:54:32.890
We recently
announced that Chrome

00:54:32.890 --> 00:54:36.400
is going to start enforcing
accurate cookie classification

00:54:36.400 --> 00:54:39.070
beginning in February,
and in particular,

00:54:39.070 --> 00:54:40.990
looking for developers
to be able to specify

00:54:40.990 --> 00:54:42.490
whether their cookies
are to be used

00:54:42.490 --> 00:54:47.290
in a first-party or third-party
classification context.

00:54:47.290 --> 00:54:49.420
And this is just going to
make cookies more secure,

00:54:49.420 --> 00:54:53.260
and also make our tracking
controls more accurate.

00:54:53.260 --> 00:54:55.337
Other browsers have
announced that they're

00:54:55.337 --> 00:54:56.420
joining us in this effort.

00:54:59.610 --> 00:55:02.610
And then one more thing I
want to talk about on privacy,

00:55:02.610 --> 00:55:04.860
but we're just continuing
to innovate on our privacy

00:55:04.860 --> 00:55:05.760
sandbox.

00:55:05.760 --> 00:55:08.700
And what this is is
a secure environment

00:55:08.700 --> 00:55:11.760
for personalization,
including ads.

00:55:11.760 --> 00:55:13.830
And it also protects
user privacy.

00:55:13.830 --> 00:55:16.110
So since the August
announcement,

00:55:16.110 --> 00:55:19.050
we've announced two
intents to implement--

00:55:19.050 --> 00:55:22.710
Click Conversion Measurement
and Trust Token APIs.

00:55:22.710 --> 00:55:23.440
Check them out.

00:55:23.440 --> 00:55:24.540
We'd love your feedback.

00:55:24.540 --> 00:55:25.920
And you'll hear
a little bit more

00:55:25.920 --> 00:55:30.612
about these in the
next talk at 11:00.

00:55:30.612 --> 00:55:33.590
Of course you can't have
privacy without security.

00:55:33.590 --> 00:55:36.620
And our philosophy
in Chrome is that you

00:55:36.620 --> 00:55:39.200
shouldn't have to be a security
expert to stay safe online.

00:55:39.200 --> 00:55:40.850
And so as much as
possible, we try

00:55:40.850 --> 00:55:44.340
to build security in by
default. So since the beginning,

00:55:44.340 --> 00:55:46.430
we've built in
protections to just warn

00:55:46.430 --> 00:55:48.710
users of
potentially-dangerous sites

00:55:48.710 --> 00:55:50.600
that may try to phish
their credentials

00:55:50.600 --> 00:55:54.950
or install malware, and
then also really invest

00:55:54.950 --> 00:55:58.280
in regularly updating users
with the latest security

00:55:58.280 --> 00:55:59.700
updates or features.

00:55:59.700 --> 00:56:02.000
And so I want to talk
about just two things

00:56:02.000 --> 00:56:04.630
we're proud of from
this past year.

00:56:04.630 --> 00:56:08.770
Passwords-- everyone
knows about passwords.

00:56:08.770 --> 00:56:11.500
Compromised passwords
remain one of the biggest

00:56:11.500 --> 00:56:13.190
risks to users on the web.

00:56:13.190 --> 00:56:16.740
And that's why we continue to
invest in our Password Manager.

00:56:16.740 --> 00:56:20.830
Today, not only can Chrome users
safely store their passwords,

00:56:20.830 --> 00:56:24.190
but they can also generate
unique, strong passwords

00:56:24.190 --> 00:56:27.490
for all sites on either
desktop and mobile.

00:56:27.490 --> 00:56:29.950
And what we'll be bringing
to you by the end of the year

00:56:29.950 --> 00:56:34.000
is actually a Chrome that
will proactively warn you

00:56:34.000 --> 00:56:35.950
if we detect that
any of your passwords

00:56:35.950 --> 00:56:37.243
have been compromised.

00:56:37.243 --> 00:56:39.160
And this way, as a user,
you can actually just

00:56:39.160 --> 00:56:42.335
take additional protections to
protect those online accounts

00:56:42.335 --> 00:56:43.210
which may be at risk.

00:56:45.920 --> 00:56:48.070
And then finally
another accomplishment

00:56:48.070 --> 00:56:50.410
is just bringing Site
Isolation to Android.

00:56:50.410 --> 00:56:53.140
So Site Isolation is like
the next major advancement

00:56:53.140 --> 00:56:54.400
in browser sandboxing.

00:56:54.400 --> 00:56:58.812
And it protects users from
speculative execution attacks.

00:56:58.812 --> 00:57:01.270
You may have heard of Spectre,
which got a lot of headlines

00:57:01.270 --> 00:57:02.860
two years ago.

00:57:02.860 --> 00:57:05.410
And bringing this to
Android was actually

00:57:05.410 --> 00:57:07.720
only possible because of a
lot of the memory savings

00:57:07.720 --> 00:57:10.630
that we made that I described
earlier in the talk.

00:57:10.630 --> 00:57:13.735
And so kudos to the teams
that have made this possible.

00:57:16.720 --> 00:57:20.130
Overall, we feel a huge
responsibility in Chrome

00:57:20.130 --> 00:57:22.950
to continue to bring helpful
innovation to just make

00:57:22.950 --> 00:57:25.920
the web perform better,
make it more accessible,

00:57:25.920 --> 00:57:29.670
and stay ahead of
users' expectations

00:57:29.670 --> 00:57:31.740
when it comes to
security and privacy.

00:57:31.740 --> 00:57:35.160
And I cannot underscore that
this would not be possible

00:57:35.160 --> 00:57:37.560
without the support of
the developer community,

00:57:37.560 --> 00:57:40.240
and just everybody who's
contributing to the ecosystem.

00:57:40.240 --> 00:57:42.760
So truly thank you so much.

00:57:42.760 --> 00:57:44.720
[APPLAUSE]

00:57:44.720 --> 00:57:46.680
[MUSIC PLAYING]

00:57:48.160 --> 00:57:50.020
With that, I'm going
to call Anil back

00:57:50.020 --> 00:57:51.562
on stage just for
some closing words.

00:57:57.110 --> 00:57:59.110
ANIL SABHARWAL: Reflecting
back on my own story,

00:57:59.110 --> 00:58:02.520
if I could take you back
to 1993 for a second,

00:58:02.520 --> 00:58:05.070
there is no way
that kid growing up

00:58:05.070 --> 00:58:08.730
in Montreal on that
Commodore Amiga 4000 ever

00:58:08.730 --> 00:58:12.970
thought that he'd be standing
here with all of you today.

00:58:12.970 --> 00:58:16.440
And that is what makes
the web so great.

00:58:16.440 --> 00:58:19.920
As an open platform, it
opens up possibilities

00:58:19.920 --> 00:58:22.410
for millions of developers
and billions of people

00:58:22.410 --> 00:58:24.070
all over the world.

00:58:24.070 --> 00:58:27.900
If you see a need in your
community, all you have to do

00:58:27.900 --> 00:58:30.690
is build something on
the web immediately,

00:58:30.690 --> 00:58:34.170
and you can push it live with no
friction, and no one of having

00:58:34.170 --> 00:58:35.100
to approve anything.

00:58:35.100 --> 00:58:37.650
It's available for
everyone instantly.

00:58:37.650 --> 00:58:39.780
All you need to do
is give them a link.

00:58:39.780 --> 00:58:41.310
And that's the power of the web.

00:58:41.310 --> 00:58:44.440
And together, we can
continue to move it forward.

00:58:44.440 --> 00:58:46.320
In fact, a great
example of this work

00:58:46.320 --> 00:58:48.150
that I'd love to
highlight of building

00:58:48.150 --> 00:58:51.330
powerful, accessible
web experiences,

00:58:51.330 --> 00:58:54.960
is Zlto, a startup that's using
virtual incentives to make

00:58:54.960 --> 00:58:57.540
real-world economic impact.

00:58:57.540 --> 00:58:59.550
As we close this
morning's keynote,

00:58:59.550 --> 00:59:01.117
let's listen to their story.

00:59:01.117 --> 00:59:03.025
[VIDEO PLAYBACK]

01:00:21.938 --> 01:00:23.414
[END PLAYBACK]

01:00:23.414 --> 01:00:26.417
[APPLAUSE]

01:00:26.417 --> 01:00:28.000
ANIL SABHARWAL: We're
actually honored

01:00:28.000 --> 01:00:33.650
to have Allan and his CTO, Kurt,
in the audience here today.

01:00:33.650 --> 01:00:36.226
So thank you, Allan and Kurt.

01:00:36.226 --> 01:00:40.082
[APPLAUSE]

01:00:45.400 --> 01:00:47.620
So that's it for this
morning's keynote.

01:00:47.620 --> 01:00:51.250
So thank you for letting me,
the Chrome team, and Google

01:00:51.250 --> 01:00:54.670
continue to be part of this
really amazing community.

01:00:54.670 --> 01:00:57.423
Here's to the we in web.

01:00:57.423 --> 01:00:59.590
And I really hope you enjoy
the rest of the seminar.

01:00:59.590 --> 01:01:00.490
[APPLAUSE]

01:01:00.490 --> 01:01:04.440
[MUSIC PLAYING]


WEBVTT
Kind: captions
Language: en

00:00:00.120 --> 00:00:00.880
VINCENT RABAUD: Hi, everyone.

00:00:00.880 --> 00:00:02.110
My name is Vincent Rabaud.

00:00:02.110 --> 00:00:04.740
I work on image compression
research at Google.

00:00:04.740 --> 00:00:07.620
This coming spring marks
10 years since we developed

00:00:07.620 --> 00:00:09.210
the WebP image format.

00:00:09.210 --> 00:00:12.240
This video talks about WebP,
how it's being used today,

00:00:12.240 --> 00:00:14.770
and what we're developing
next for the web.

00:00:14.770 --> 00:00:17.040
Some of you may be familiar
with our previous videos

00:00:17.040 --> 00:00:20.460
on image compression, which you
can find on the links below.

00:00:20.460 --> 00:00:22.740
WebP is an image format
designed to save bytes

00:00:22.740 --> 00:00:24.120
on the wire for the web.

00:00:24.120 --> 00:00:26.610
Getting better visual
quality in fewer bytes

00:00:26.610 --> 00:00:30.210
means faster load times, reduced
data usage, and increased user

00:00:30.210 --> 00:00:31.560
engagement.

00:00:31.560 --> 00:00:33.480
Compared to the best
shaping encoders,

00:00:33.480 --> 00:00:36.300
WebP can reduce file
sizes by 20% to 30%

00:00:36.300 --> 00:00:38.340
at the same visual quality.

00:00:38.340 --> 00:00:40.800
The lossless WebP mode
sees similar savings

00:00:40.800 --> 00:00:42.780
over [? PNG ?] codes.

00:00:42.780 --> 00:00:45.960
On the animation side, WebP can
produce even greater savings

00:00:45.960 --> 00:00:47.010
over GIFs.

00:00:47.010 --> 00:00:48.990
The format is
open-source and free,

00:00:48.990 --> 00:00:53.128
so you can try out WebP today
by checking our developer site.

00:00:53.128 --> 00:00:55.170
So what has changed for
WebP since the format was

00:00:55.170 --> 00:00:56.500
first released?

00:00:56.500 --> 00:00:59.310
Well, all along, the
encode and decode libraries

00:00:59.310 --> 00:01:01.440
have continued to improve
not only in compression

00:01:01.440 --> 00:01:05.280
performance, but also in
CPU and run efficiency.

00:01:05.280 --> 00:01:08.040
Last year, we released a
1.0 version of libwebp,

00:01:08.040 --> 00:01:09.600
with future updates
focusing only

00:01:09.600 --> 00:01:11.820
on maintenance and bug fixes.

00:01:11.820 --> 00:01:13.890
Huge thanks to all the
open-source contributors,

00:01:13.890 --> 00:01:15.810
bug filers, and
testers who helped

00:01:15.810 --> 00:01:18.570
make libwebp the code
base it is today.

00:01:18.570 --> 00:01:21.450
Another recent change is
native browser support.

00:01:21.450 --> 00:01:23.160
In the last year
Firefox and Edge

00:01:23.160 --> 00:01:25.440
started shipping
with WebP decoders,

00:01:25.440 --> 00:01:28.620
adding to longstanding support
in Chromium-based browsers

00:01:28.620 --> 00:01:30.270
and Android.

00:01:30.270 --> 00:01:32.790
WebP has never been available
in more places, reaching

00:01:32.790 --> 00:01:36.030
80% of web users,
according to caniuse.com.

00:01:36.030 --> 00:01:38.850
For browsers without support,
like Safari or Internet

00:01:38.850 --> 00:01:41.700
Explorer, check out a prior
video on the picture element

00:01:41.700 --> 00:01:43.740
for a JPEG fallback.

00:01:43.740 --> 00:01:45.480
You can also use
WebAssembly to add

00:01:45.480 --> 00:01:49.080
a decoder to browsers, only when
WebP content is being served.

00:01:49.080 --> 00:01:50.880
For more information,
check out this video

00:01:50.880 --> 00:01:54.510
from Google Developer
Expert Kenneth Christiansen.

00:01:54.510 --> 00:01:57.030
The web ecosystem has
also expanded for WebP,

00:01:57.030 --> 00:02:00.360
with new options for
essential image tool chains.

00:02:00.360 --> 00:02:03.810
Most recently, our team launched
WebPShop, and open-source

00:02:03.810 --> 00:02:07.080
Photoshop plug-in for importing
and exporting WebP images

00:02:07.080 --> 00:02:09.120
in Adobe's Creative Suite.

00:02:09.120 --> 00:02:10.800
This is on top of
existing support

00:02:10.800 --> 00:02:14.250
in Google properties like
Android Studio and Squoosh,

00:02:14.250 --> 00:02:17.130
as well as open-source tools
like Gimp and ImageMagick.

00:02:17.130 --> 00:02:20.535
WebP has never been easier
to use on your site.

00:02:20.535 --> 00:02:22.410
You won't be alone,
since more developers are

00:02:22.410 --> 00:02:24.650
using WebP than ever before.

00:02:24.650 --> 00:02:26.970
Beyond success stories at
Google brands like Shopping

00:02:26.970 --> 00:02:30.450
or YouTube, companies like
Shopify, Vox, and Pinterest

00:02:30.450 --> 00:02:33.570
have detailed how WebP
improved their sites' quality.

00:02:33.570 --> 00:02:36.300
Now that we've accomplished so
much with WebP, what's next?

00:02:36.300 --> 00:02:38.970
Well, as future work, we're
exploring new algorithms

00:02:38.970 --> 00:02:42.240
that can bring an extra
25% size reduction as well

00:02:42.240 --> 00:02:46.390
as a wider color space,
hence enabling HDR display.

00:02:46.390 --> 00:02:48.240
Of course, we're keeping
the features that

00:02:48.240 --> 00:02:51.390
make WebP a great compression
format for the web, animation

00:02:51.390 --> 00:02:53.580
and lossless,
interruptibility-- meaning

00:02:53.580 --> 00:02:56.040
you can display something,
even if your image is not fully

00:02:56.040 --> 00:02:58.800
downloaded-- no need
for dedicated hardware,

00:02:58.800 --> 00:03:02.860
and, of course, low CPU
and memory footprint.

00:03:02.860 --> 00:03:05.740
Thanks for watching, and
stay tuned for updates.

00:03:05.740 --> 00:03:09.090
[MUSIC PLAYING]

